tests/test_contract_onchain_opcodes.py::TestContractOnchainLevel::test_level

Node is bootstrapped.
Estimated gas: 11354000 units (will add 100000 for safety)
Estimated storage: 300 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[BLOCK_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [BLOCK_HASH] to be included --confirmations 30 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [CONTRACT_HASH]
    Fee to the baker: ꜩ0.001421
    Expected counter: [EXPECTED_COUNTER]
    Gas limit: 11454000
    Storage limit: 320 bytes
    Balance updates:
      [CONTRACT_HASH] ................ -ꜩ0.001421
      fees(the baker who will include this operation,0) ... +ꜩ0.001421
    Origination:
      From: [CONTRACT_HASH]
      Credit: ꜩ100
      Script:
        { parameter unit ;
          storage nat ;
          code { DROP ; LEVEL ; NIL operation ; PAIR } }
        Initial storage: 9999999
        No delegate for this contract
        This origination was successfully applied
        Originated contracts:
          [CONTRACT_HASH]
        Storage size: 43 bytes
        Paid storage size diff: 43 bytes
        Consumed gas: 11354000
        Balance updates:
          [CONTRACT_HASH] ... -ꜩ0.043
          [CONTRACT_HASH] ... -ꜩ0.257
          [CONTRACT_HASH] ... -ꜩ100
          [CONTRACT_HASH] ... +ꜩ100

New contract [CONTRACT_HASH] originated.
Contract memorized as level.
Injected block [BLOCK_HASH]
Injected block [BLOCK_HASH]
Node is bootstrapped.
Estimated gas: 11480240 units (will add 100000 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[BLOCK_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [BLOCK_HASH] to be included --confirmations 30 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [CONTRACT_HASH]
    Fee to the baker: ꜩ0.001413
    Expected counter: [EXPECTED_COUNTER]
    Gas limit: 11580240
    Storage limit: 0 bytes
    Balance updates:
      [CONTRACT_HASH] ................ -ꜩ0.001413
      fees(the baker who will include this operation,0) ... +ꜩ0.001413
    Transaction:
      Amount: ꜩ500
      From: [CONTRACT_HASH]
      To: [CONTRACT_HASH]
      This transaction was successfully applied
      Updated storage: 4
      Storage size: 40 bytes
      Consumed gas: 11480240
      Balance updates:
        [CONTRACT_HASH] ... -ꜩ500
        [CONTRACT_HASH] ... +ꜩ500

Injected block [BLOCK_HASH]
{ "level": [LEVEL], "proto": 1,
  "predecessor": "[BLOCK_HASH]",
  "timestamp": "[TIMESTAMP]", "validation_pass": 4,
  "operations_hash": "[OPERATION_HASH]",
  "fitness": "[FITNESS]",
  "context": "[CONTEXT]" }
4
Injected block [BLOCK_HASH]
Injected block [BLOCK_HASH]
4
Node is bootstrapped.
Estimated gas: 11450240 units (will add 100000 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[BLOCK_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [BLOCK_HASH] to be included --confirmations 30 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [CONTRACT_HASH]
    Fee to the baker: ꜩ0.00141
    Expected counter: [EXPECTED_COUNTER]
    Gas limit: 11550240
    Storage limit: 0 bytes
    Balance updates:
      [CONTRACT_HASH] ................ -ꜩ0.00141
      fees(the baker who will include this operation,0) ... +ꜩ0.00141
    Transaction:
      Amount: ꜩ500
      From: [CONTRACT_HASH]
      To: [CONTRACT_HASH]
      This transaction was successfully applied
      Updated storage: 7
      Storage size: 40 bytes
      Consumed gas: 11450240
      Balance updates:
        [CONTRACT_HASH] ... -ꜩ500
        [CONTRACT_HASH] ... +ꜩ500

Injected block [BLOCK_HASH]
7
