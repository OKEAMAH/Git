// SPDX-FileCopyrightText: 2024 TriliTech <contact@trili.tech>
//
// SPDX-License-Identifier: MIT

syntax = "proto3";

package ordering;

message Transaction {
    bytes transaction = 1;
}

// Empty message for when we don't have anything to return
message Empty {}

service Transactions {
    // Submit a single transaction
    rpc SubmitTransaction(Transaction) returns (Empty) {}

    // Open a unidirectional stream that will close once all transactions are sent
    rpc SubmitTransactionStream(stream Transaction) returns (Empty) {}
}

message PreBlockHeader {
    uint64 id = 1;
    bytes metadata = 2;
}

message PreBlock {
    PreBlockHeader header = 1;
    repeated Transaction transactions = 2;
}

message PreBlocksRequest {
    uint64 from_id = 1;
}

service PreBlocks {
    // Get most recent pre-block ID
    rpc GetLatestPreBlockHeader(Empty) returns (PreBlockHeader) {}

    // Fetch all pre-blocks from the specified ID (including that one)
    // and then switch to the realtime subscription mode
    rpc LiveQueryPreBlocks(PreBlocksRequest) returns (stream PreBlock) {}
}
