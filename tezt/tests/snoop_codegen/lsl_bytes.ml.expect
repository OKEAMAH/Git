(* Do not edit this file manually.
   This file was automatically generated from benchmark models
   If you wish to update a function in this file,
   a. update the corresponding model, or
   b. move the function to another module and edit it there. *)

[@@@warning "-33"]

module S = Saturation_repr
open S.Syntax

(* model builtin/timer_model *)
(* max 10 0. *)
let cost_timer_model = S.safe_int 10

(* model interpreter/N_IHalt *)
(* max 10 13.4367670271 *)
let cost_N_IHalt = S.safe_int 15

(* model interpreter/N_ILsl_bytes *)
(* fun size1 ->
     fun size2 ->
       max 10
         ((68.5632329729 + (0.118615666787 * size1)) +
            (0.00495349620101 * (sub size2 1))) *)
let cost_N_ILsl_bytes size1 size2 =
  let size1 = S.safe_int size1 in
  let size2 = S.safe_int size2 in
  let w1 = S.sub size2 (S.safe_int 1) in
  (w1 lsr 8) + (w1 lsr 10) + (w1 lsr 13) + (size1 lsr 4) + (size1 lsr 5)
  + (size1 lsr 6) + (size1 lsr 7) + (size1 lsr 9) + S.safe_int 70

(* model interpreter/amplification_loop_model *)
(* fun size -> max 10 (0.318599639559 * size) *)
let cost_amplification_loop_model size =
  let size = S.safe_int size in
  S.max (S.safe_int 10) ((size lsr 2) + (size lsr 4) + (size lsr 7))

(* model zero *)
(* max 10 0 *)
let cost_zero = S.safe_int 10
