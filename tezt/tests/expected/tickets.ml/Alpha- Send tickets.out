
./octez-client --mode mockup --wait none originate contract receive_tickets transferring 200 from bootstrap1 running michelson_test_scripts/mini_scenarios/receive_tickets.tz --init '{}' --burn-cap 1
Node is bootstrapped.
Estimated gas: 585.399 units (will add 100 for safety)
Estimated storage: 314 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000356
    Expected counter: 1
    Gas limit: 686
    Storage limit: 334 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000356
      payload fees(the block proposer) ....... +ꜩ0.000356
    Origination:
      From: [PUBLIC_KEY_HASH]
      Credit: ꜩ200
      Script:
        { parameter (ticket string) ;
          storage (list (ticket string)) ;
          code { CAR ; NIL (ticket string) ; SWAP ; CONS ; NIL operation ; PAIR } }
        Initial storage: {}
        No delegate for this contract
        This origination was successfully applied
        Originated contracts:
          [CONTRACT_HASH]
        Storage size: 57 bytes
        Paid storage size diff: 57 bytes
        Consumed gas: 585.366
        Balance updates:
          [PUBLIC_KEY_HASH] ... -ꜩ0.01425
          storage fees ........................... +ꜩ0.01425
          [PUBLIC_KEY_HASH] ... -ꜩ0.06425
          storage fees ........................... +ꜩ0.06425
          [PUBLIC_KEY_HASH] ... -ꜩ200
          [CONTRACT_HASH] ... +ꜩ200

New contract [CONTRACT_HASH] originated.
Contract memorized as receive_tickets.

./octez-client --mode mockup --wait none originate contract send_tickets transferring 200 from bootstrap1 running michelson_test_scripts/mini_scenarios/send_tickets.tz --init Unit --burn-cap 1
Node is bootstrapped.
Estimated gas: 614.714 units (will add 100 for safety)
Estimated storage: 434 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000479
    Expected counter: 2
    Gas limit: 715
    Storage limit: 454 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000479
      payload fees(the block proposer) ....... +ꜩ0.000479
    Origination:
      From: [PUBLIC_KEY_HASH]
      Credit: ꜩ200
      Script:
        { parameter address ;
          storage unit ;
          code { CAR ;
                 CONTRACT (ticket string) ;
                 IF_NONE
                   { PUSH string "Contract of type `ticket(string)` not found" ; FAILWITH }
                   { PUSH mutez 0 ;
                     PUSH nat 1 ;
                     PUSH string "BLUE" ;
                     TICKET ;
                     ASSERT_SOME ;
                     TRANSFER_TOKENS ;
                     PUSH unit Unit ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR } } }
        Initial storage: Unit
        No delegate for this contract
        This origination was successfully applied
        Originated contracts:
          [CONTRACT_HASH]
        Storage size: 177 bytes
        Paid storage size diff: 177 bytes
        Consumed gas: 614.681
        Balance updates:
          [PUBLIC_KEY_HASH] ... -ꜩ0.04425
          storage fees ........................... +ꜩ0.04425
          [PUBLIC_KEY_HASH] ... -ꜩ0.06425
          storage fees ........................... +ꜩ0.06425
          [PUBLIC_KEY_HASH] ... -ꜩ200
          [CONTRACT_HASH] ... +ꜩ200

New contract [CONTRACT_HASH] originated.
Contract memorized as send_tickets.

./octez-client --mode mockup --wait none transfer 0 from bootstrap2 to '[CONTRACT_HASH]' --burn-cap 30 --storage-limit 1000000 --arg '"[CONTRACT_HASH]"'
Node is bootstrapped.
Estimated gas: 4102.286 units (will add 100 for safety)
Estimated storage: 108 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000716
    Expected counter: 1
    Gas limit: 4203
    Storage limit: 128 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000716
      payload fees(the block proposer) ....... +ꜩ0.000716
    Transaction:
      Amount: ꜩ0
      From: [PUBLIC_KEY_HASH]
      To: [CONTRACT_HASH]
      Parameter: "[CONTRACT_HASH]"
      This transaction was successfully applied
      Updated storage: Unit
      Storage size: 177 bytes
      Paid storage size diff: 66 bytes
      Consumed gas: 2211.169
      Balance updates:
        [PUBLIC_KEY_HASH] ... -ꜩ0.0165
        storage fees ........................... +ꜩ0.0165
      Internal operations:
        Internal Transaction:
          Amount: ꜩ0
          From: [CONTRACT_HASH]
          To: [CONTRACT_HASH]
          Parameter: (Pair 0x0169bef89238bdc25cf9d7c63e4ddb45d2e3311cf700 (Pair "BLUE" 1))
          This transaction was successfully applied
          Updated storage:
            { Pair 0x0169bef89238bdc25cf9d7c63e4ddb45d2e3311cf700 (Pair "BLUE" 1) }
          Storage size: 99 bytes
          Paid storage size diff: 42 bytes
          Consumed gas: 1892.245
          Balance updates:
            [PUBLIC_KEY_HASH] ... -ꜩ0.0105
            storage fees ........................... +ꜩ0.0105
          Ticket updates:
            Ticketer: [CONTRACT_HASH]
            Content type: string
            Content: "BLUE"
            Account updates:
              [CONTRACT_HASH] ... +1

