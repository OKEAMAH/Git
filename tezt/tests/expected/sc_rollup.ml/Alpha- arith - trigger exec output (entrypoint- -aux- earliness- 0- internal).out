
./octez-client --wait none originate sc rollup from bootstrap1 of kind arith of type bytes with kernel  --burn-cap 9999999
Node is bootstrapped.
Estimated gas: 2939.925 units (will add 100 for safety)
Estimated storage: 6524 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000652
    Expected counter: 1
    Gas limit: 3040
    Storage limit: 6544 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000652
      payload fees(the block proposer) ....... +ꜩ0.000652
    Smart contract rollup origination:
      Kind: arith
      Parameter type: bytes
      Kernel Blake2B hash: '0e5751c026e543b2e8ab2eb06099daa1d1e5df47778f7787faab45cdf12fe3a8'
      This smart contract rollup origination was successfully applied
      Consumed gas: 2939.925
      Storage size: 6524 bytes
      Address: [SMART_ROLLUP_HASH]
      Genesis commitment hash: [SC_ROLLUP_COMMITMENT_HASH]
      Balance updates:
        [PUBLIC_KEY_HASH] ... -ꜩ1.631
        storage fees ........................... +ꜩ1.631


./octez-client --wait none execute outbox message of sc rollup '[SMART_ROLLUP_HASH]' from '[PUBLIC_KEY_HASH]' for commitment hash '[SC_ROLLUP_COMMITMENT_HASH]' and output proof 0x0300021ca8f12c3aa9a6a9649af00f439e01c82a87ad9f9eeaf08ee9e1ec8dcc429ffb1ca8f12c3aa9a6a9649af00f439e01c82a87ad9f9eeaf08ee9e1ec8dcc429ffb00100007d0030170000382066f7574707574810130c805639510aee988ab3152135cb7851c3eb7d8e19f3b0b5d61a761107951ded1dd0c7061727365725f7374617465c8407f958990678e2e9fb06758bc6520dae46d838d39948a4c51a5b19bd079293dc0fa513fc9657217226bee9cf2242f01b8939ef07b7363a2c7ba435a57c2cbed83c01f96dd5a18c2789d602305a735743ae1b83caa5300396d03a6c99d1a5431d7c8c06cebd770767d6e9e746e42e5b2c772092c7874983cd57a5a7d57128ad2a26eb71ca8f12c3aa9a6a9649af00f439e01c82a87ad9f9eeaf08ee9e1ec8dcc429ffb0000000500000000001f002501c00c5e4e94a48a49e267873112bbe3cf3373be5b0000000003617578 --burn-cap 10
Node is bootstrapped.
Estimated gas: 5879.286 units (will add 100 for safety)
Estimated storage: 5 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.001217
    Expected counter: 1
    Gas limit: 5980
    Storage limit: 25 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.001217
      payload fees(the block proposer) ....... +ꜩ0.001217
    Smart contract output message execution:
      Address: [SMART_ROLLUP_HASH]
      Cemented commitment: [SC_ROLLUP_COMMITMENT_HASH]
      This smart contract output message execution was successfully applied
      Paid storage size diff: 5 bytes
      Consumed gas: 4676.147
      Balance updates:
        [PUBLIC_KEY_HASH] ... -ꜩ0.00125
        storage fees ........................... +ꜩ0.00125
      Internal operations:
        Internal Transaction:
          Amount: ꜩ0
          From: [PUBLIC_KEY_HASH]
          To: [CONTRACT_HASH]
          Entrypoint: aux
          Parameter: 37
          This transaction was successfully applied
          Updated storage: 37
          Storage size: 92 bytes
          Consumed gas: 1203.139

