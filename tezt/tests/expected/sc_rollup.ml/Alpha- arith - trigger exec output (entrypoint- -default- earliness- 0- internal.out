
./octez-client --wait none originate sc rollup from bootstrap1 of kind arith of type bytes with kernel  --burn-cap 9999999
Node is bootstrapped.
Estimated gas: 3169.941 units (will add 100 for safety)
Estimated storage: 6532 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000675
    Expected counter: 1
    Gas limit: 3270
    Storage limit: 6552 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000675
      payload fees(the block proposer) ....... +ꜩ0.000675
    Smart contract rollup origination:
      Kind: arith
      Parameter type: bytes
      Kernel Blake2B hash: '0e5751c026e543b2e8ab2eb06099daa1d1e5df47778f7787faab45cdf12fe3a8'
      This smart contract rollup origination was successfully applied
      Consumed gas: 3169.941
      Storage size: 6532 bytes
      Address: [SMART_ROLLUP_HASH]
      Genesis commitment hash: [SC_ROLLUP_COMMITMENT_HASH]
      Balance updates:
        [PUBLIC_KEY_HASH] ... -ꜩ1.633
        storage fees ........................... +ꜩ1.633


./octez-client --wait none execute outbox message of sc rollup '[SMART_ROLLUP_HASH]' from '[PUBLIC_KEY_HASH]' for commitment hash '[SC_ROLLUP_COMMITMENT_HASH]' and output proof 0x03000258d7266ea850d6eef1fa03db97d047e5d46be09d289d4c8db8452baecc28633058d7266ea850d6eef1fa03db97d047e5d46be09d289d4c8db8452baecc28633000100007d0030170000382066f7574707574810130c847a5c2aba11c9a05ba4f50b87cbf46235ff3d5f0513e34da8b6b891259d7ec8b0c7061727365725f7374617465c8407f958990678e2e9fb06758bc6520dae46d838d39948a4c51a5b19bd079293dc0fa513fc9657217226bee9cf2242f01b8939ef07b7363a2c7ba435a57c2cbed83c0b9543ec7505c0d34f509d4f3e29af8c2de75d2a22ff591850e07401737bc956cc093cf7b0656a49a394fee9856478046aff511d04dd9d8cfcfa32a2182074c29c358d7266ea850d6eef1fa03db97d047e5d46be09d289d4c8db8452baecc2863300000000500000000002300250124a8de819e9ab9dcadac94c3d49981dc4b864f2f000000000764656661756c74 --burn-cap 10
Node is bootstrapped.
Estimated gas: 6398.436 units (will add 100 for safety)
Estimated storage: 5 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.001273
    Expected counter: 1
    Gas limit: 6499
    Storage limit: 25 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.001273
      payload fees(the block proposer) ....... +ꜩ0.001273
    Smart contract output message execution:
      Address: [SMART_ROLLUP_HASH]
      Cemented commitment: [SC_ROLLUP_COMMITMENT_HASH]
      This smart contract output message execution was successfully applied
      Paid storage size diff: 5 bytes
      Consumed gas: 4745.058
      Balance updates:
        [PUBLIC_KEY_HASH] ... -ꜩ0.00125
        storage fees ........................... +ꜩ0.00125
      Internal operations:
        Internal Transaction:
          Amount: ꜩ0
          From: [SMART_ROLLUP_HASH]
          To: [CONTRACT_HASH]
          Parameter: 37
          This transaction was successfully applied
          Updated storage: 37
          Storage size: 228 bytes
          Consumed gas: 1653.378

