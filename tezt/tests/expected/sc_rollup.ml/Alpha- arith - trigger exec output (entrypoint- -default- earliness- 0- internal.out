
./octez-client --wait none originate sc rollup from bootstrap1 of kind arith of type bytes with kernel  --burn-cap 9999999
Node is bootstrapped.
Estimated gas: 2939.925 units (will add 100 for safety)
Estimated storage: 6524 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000652
    Expected counter: 1
    Gas limit: 3040
    Storage limit: 6544 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000652
      payload fees(the block proposer) ....... +ꜩ0.000652
    Smart contract rollup origination:
      Kind: arith
      Parameter type: bytes
      Kernel Blake2B hash: '0e5751c026e543b2e8ab2eb06099daa1d1e5df47778f7787faab45cdf12fe3a8'
      This smart contract rollup origination was successfully applied
      Consumed gas: 2939.925
      Storage size: 6524 bytes
      Address: [SMART_ROLLUP_HASH]
      Genesis commitment hash: [SC_ROLLUP_COMMITMENT_HASH]
      Balance updates:
        [PUBLIC_KEY_HASH] ... -ꜩ1.631
        storage fees ........................... +ꜩ1.631


./octez-client --wait none execute outbox message of sc rollup '[SMART_ROLLUP_HASH]' from '[PUBLIC_KEY_HASH]' for commitment hash '[SC_ROLLUP_COMMITMENT_HASH]' and output proof 0x030002764c74ed98a35d64131e622a15ce1ebbff6685fe9017ef570afc037296ade01a764c74ed98a35d64131e622a15ce1ebbff6685fe9017ef570afc037296ade01a00100007d0030170000382066f7574707574810130c8b3be8e119db56ecbdb098e21636b1e0d6f7429a633db34b47445364df8c39c0c0c7061727365725f7374617465c8407f958990678e2e9fb06758bc6520dae46d838d39948a4c51a5b19bd079293dc0fa513fc9657217226bee9cf2242f01b8939ef07b7363a2c7ba435a57c2cbed83c079e7c51c545026e7cb98deb1982ace4bfccc0d4e5056cfa1e215f6baaeeeabffc093cf7b0656a49a394fee9856478046aff511d04dd9d8cfcfa32a2182074c29c3764c74ed98a35d64131e622a15ce1ebbff6685fe9017ef570afc037296ade01a00000005000000000023002501c00c5e4e94a48a49e267873112bbe3cf3373be5b000000000764656661756c74 --burn-cap 10
Node is bootstrapped.
Estimated gas: 5879.904 units (will add 100 for safety)
Estimated storage: 5 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.001221
    Expected counter: 1
    Gas limit: 5980
    Storage limit: 25 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.001221
      payload fees(the block proposer) ....... +ꜩ0.001221
    Smart contract output message execution:
      Address: [SMART_ROLLUP_HASH]
      Cemented commitment: [SC_ROLLUP_COMMITMENT_HASH]
      This smart contract output message execution was successfully applied
      Paid storage size diff: 5 bytes
      Consumed gas: 4676.800
      Balance updates:
        [PUBLIC_KEY_HASH] ... -ꜩ0.00125
        storage fees ........................... +ꜩ0.00125
      Internal operations:
        Internal Transaction:
          Amount: ꜩ0
          From: [PUBLIC_KEY_HASH]
          To: [CONTRACT_HASH]
          Parameter: 37
          This transaction was successfully applied
          Updated storage: 37
          Storage size: 92 bytes
          Consumed gas: 1203.104

