misc_checks:
  extends: .build_template
  stage: test
  needs: []
  script:
    # checks that all deps of opam packages are already installed
    - ./scripts/opam-check.sh
    # misc linting
    - find . ! -path "./_opam/*" -name "*.opam" -exec opam lint {} +;
    - make check-linting
    - make check-python-linting
    # python checks
    - make -C tests_python typecheck
    # Ensure that all unit tests are restricted to their opam package
    - make lint-tests-pkg
    # check that the hack-module patch applies cleanly
    - git apply devtools/protocol-print/add-hack-module.patch
    # check that yes-wallet builds correctly
    - dune build scripts/yes-wallet/yes_wallet.exe
  artifacts:
    when: always
    paths:
      - opam_repo.patch
    expire_in: 1 days

semgrep:
  extends:
    - .rules_template__development
  image: returntocorp/semgrep-agent:v1
  stage: test
  needs: []
  script:
    # We can't do linting on frozen protocol (src/proto_*/lib_protocol/*.ml) but we
    # can still do it on the in-development protocol
    # (src/proto_alpha/lib_protocol/*.ml). The `exclude` pattern below expresses
    # this.
    - semgrep --disable-metrics -l ocaml -c linting/ --exclude "src/proto_[0-9]*/lib_protocol/*.ml*" src/ tezt/

check_precommit_hook:
  extends: .build_template
  stage: test
  needs: []
  script:
    - ./scripts/pre_commit/pre_commit.py --test-itself
    - poetry run pylint scripts/pre_commit/pre_commit.py
    - poetry run pycodestyle scripts/pre_commit/pre_commit.py
    - poetry run mypy scripts/pre_commit/pre_commit.py

check_scripts_b58_prefix:
  # Can be changed to a python image, but using the build docker image to keep
  # in sync with the python version used for the tests
  extends: .test_template
  needs: []
  before_script:
    - . $HOME/.venv/bin/activate
  script:
    - poetry run pylint scripts/b58_prefix/b58_prefix.py --disable=missing-docstring --disable=invalid-name
    - poetry run pytest scripts/b58_prefix/test_b58_prefix.py -v
