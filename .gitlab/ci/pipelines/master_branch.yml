# This file was automatically generated, do not edit.
# Edit file ci/bin/main.ml instead.

oc.build:static-x86_64-linux-binaries:
  image: ${build_deps_image_name}:runtime-build-dependencies--${build_deps_image_version}
  stage: build
  tags:
  - gcp
  needs:
  - trigger
  dependencies: []
  script:
  - ./scripts/ci/build_static_binaries.sh
  before_script:
  - ./scripts/ci/take_ownership.sh
  - eval $(opam env)
  variables:
    ARCH: x86_64
    EXECUTABLE_FILES: script-inputs/released-executables script-inputs/experimental-executables
  artifacts:
    paths:
    - octez-binaries/$ARCH/*
oc.build:static-arm64-linux-binaries:
  image: ${build_deps_image_name}:runtime-build-dependencies--${build_deps_image_version}
  stage: build
  tags:
  - gcp_arm64
  dependencies: []
  script:
  - ./scripts/ci/build_static_binaries.sh
  before_script:
  - ./scripts/ci/take_ownership.sh
  - eval $(opam env)
  variables:
    ARCH: arm64
    EXECUTABLE_FILES: script-inputs/released-executables script-inputs/experimental-executables
  artifacts:
    paths:
    - octez-binaries/$ARCH/*
oc.build_arm64-released:
  image: ${build_deps_image_name}:runtime-build-dependencies--${build_deps_image_version}
  stage: build
  tags:
  - gcp_arm64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: always
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--arm64(?:$|[,])/
    when: on_success
  - changes:
    - src/**/*
    - .gitlab/**/*
    - .gitlab-ci.yml
    when: manual
    allow_failure: true
  dependencies: []
  script:
  - ./scripts/ci/build_full_unreleased.sh
  before_script:
  - ./scripts/ci/take_ownership.sh
  - . ./scripts/version.sh
  - eval $(opam env)
  variables:
    ARCH: arm64
    EXECUTABLE_FILES: script-inputs/released-executables
    GIT_SHORTREF: "00000000"
    GIT_DATETIME: 1970-01-01 00:00:00 +0000%
    GIT_VERSION: dev
  artifacts:
    name: build-$ARCH-$CI_COMMIT_REF_SLUG
    expire_in: 1 day
    paths:
    - octez-*
    - src/proto_*/parameters/*.json
    - _build/default/src/lib_protocol_compiler/bin/main_native.exe
    - _build/default/tezt/tests/main.exe
    - _build/default/contrib/octez_injector_server/octez_injector_server.exe
    when: on_success
oc.build_arm64-exp-dev-extra:
  image: ${build_deps_image_name}:runtime-build-dependencies--${build_deps_image_version}
  stage: build
  tags:
  - gcp_arm64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: always
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--arm64(?:$|[,])/
    when: on_success
  - changes:
    - src/**/*
    - .gitlab/**/*
    - .gitlab-ci.yml
    when: manual
    allow_failure: true
  dependencies: []
  script:
  - ./scripts/ci/build_full_unreleased.sh
  before_script:
  - ./scripts/ci/take_ownership.sh
  - . ./scripts/version.sh
  - eval $(opam env)
  variables:
    ARCH: arm64
    EXECUTABLE_FILES: script-inputs/experimental-executables script-inputs/dev-executables
    GIT_SHORTREF: "00000000"
    GIT_DATETIME: 1970-01-01 00:00:00 +0000%
    GIT_VERSION: dev
    BUILD_EXTRA: src/bin_tps_evaluation/main_tps_evaluation.exe src/bin_octogram/octogram_main.exe
      tezt/tests/main.exe
  artifacts:
    name: build-$ARCH-$CI_COMMIT_REF_SLUG
    expire_in: 1 day
    paths:
    - octez-*
    - src/proto_*/parameters/*.json
    - _build/default/src/lib_protocol_compiler/bin/main_native.exe
    - _build/default/tezt/tests/main.exe
    - _build/default/contrib/octez_injector_server/octez_injector_server.exe
    when: on_success
oc.docker:amd64:
  image: ${CI_REGISTRY}/tezos/docker-images/ci-docker:v1.9.0
  stage: build
  tags:
  - gcp
  dependencies: []
  script:
  - ./scripts/ci/docker_release.sh
  before_script:
  - ./scripts/ci/docker_wait_for_daemon.sh
  - ./scripts/ci/docker_check_version.sh ${DOCKER_VERSION}
  - ./scripts/ci/docker_registry_auth.sh
  services:
  - docker:${DOCKER_VERSION}-dind
  variables:
    DOCKER_VERSION: 24.0.6
    DOCKER_BUILD_TARGET: with-evm-artifacts
    IMAGE_ARCH_PREFIX: amd64_
    CI_DOCKER_HUB: "true"
    EXECUTABLE_FILES: script-inputs/released-executables script-inputs/experimental-executables
oc.docker:arm64:
  image: ${CI_REGISTRY}/tezos/docker-images/ci-docker:v1.9.0
  stage: build
  tags:
  - gcp_arm64
  dependencies: []
  script:
  - ./scripts/ci/docker_release.sh
  before_script:
  - ./scripts/ci/docker_wait_for_daemon.sh
  - ./scripts/ci/docker_check_version.sh ${DOCKER_VERSION}
  - ./scripts/ci/docker_registry_auth.sh
  services:
  - docker:${DOCKER_VERSION}-dind
  variables:
    DOCKER_VERSION: 24.0.6
    DOCKER_BUILD_TARGET: without-evm-artifacts
    IMAGE_ARCH_PREFIX: arm64_
    CI_DOCKER_HUB: "true"
    EXECUTABLE_FILES: script-inputs/released-executables script-inputs/experimental-executables
oc.unified_coverage:
  image: ${build_deps_image_name}:runtime-build-test-dependencies--${build_deps_image_version}
  stage: test_coverage
  tags:
  - gcp
  dependencies: []
  allow_failure: true
  script:
  - . ./scripts/version.sh
  - mkdir -p _coverage_report
  - dune exec scripts/ci/download_coverage/download.exe -- -a from=last-merged-pipeline
    --info --log-file _coverage_report/download_coverage.log
  - ./scripts/ci/report_coverage.sh
  variables:
    PROJECT: $CI_PROJECT_PATH
    DEFAULT_BRANCH: $CI_COMMIT_SHA
    COVERAGE_OPTIONS: --instrument-with bisect_ppx
    BISECT_FILE: $CI_PROJECT_DIR/_coverage_output/
    SLACK_COVERAGE_CHANNEL: C02PHBE7W73
  artifacts:
    expire_in: 15 days
    paths:
    - _coverage_report/
    - $BISECT_FILE
    reports:
      coverage_report:
        coverage_format: cobertura
        path: _coverage_report/cobertura.xml
    when: always
    expose_as: Coverage report
  coverage: '/Coverage: ([^%]+%)/'
publish:documentation:
  image: ${build_deps_image_name}:runtime-build-test-dependencies--${build_deps_image_version}
  stage: doc
  tags:
  - gcp
  rules:
  - changes:
    - scripts/**/*/
    - script-inputs/**/*/
    - src/**/*
    - tezt/**/*
    - vendors/**/*
    - dune
    - dune-project
    - dune-workspace
    - docs/**/*
    - .gitlab/**/*
    - .gitlab-ci.yml
    when: on_success
  needs: []
  dependencies: []
  interruptible: false
  script:
  - ./scripts/ci/doc_publish.sh
  before_script:
  - eval $(opam env)
  - . $HOME/.venv/bin/activate
  - echo "${CI_PK_GITLAB_DOC}" > ~/.ssh/id_ed25519
  - echo "${CI_KH}" > ~/.ssh/known_hosts
  - chmod 400 ~/.ssh/id_ed25519
docker:merge_manifests:
  image: ${CI_REGISTRY}/tezos/docker-images/ci-docker:v1.9.0
  stage: prepare_release
  tags:
  - gcp
  needs:
  - oc.docker:amd64
  - oc.docker:arm64
  dependencies: []
  script:
  - ./scripts/ci/docker_merge_manifests.sh
  before_script:
  - ./scripts/ci/docker_wait_for_daemon.sh
  - ./scripts/ci/docker_check_version.sh ${DOCKER_VERSION}
  - ./scripts/ci/docker_registry_auth.sh
  services:
  - docker:${DOCKER_VERSION}-dind
  variables:
    DOCKER_VERSION: 24.0.6
    CI_DOCKER_HUB: "true"
publish_kernel_sdk:
  image: ${build_deps_image_name}:rust-toolchain--${build_deps_image_version}
  stage: manual
  tags:
  - gcp
  needs: []
  dependencies: []
  allow_failure: true
  cache:
    key: kernels
    paths:
    - cargo/
  interruptible: false
  script:
  - make -f kernels.mk publish-sdk-deps
  - SSL_CERT_DIR=/etc/ssl/certs CC=clang make -f kernels.mk publish-sdk
  variables:
    CARGO_HOME: $CI_PROJECT_DIR/cargo
  when: manual
