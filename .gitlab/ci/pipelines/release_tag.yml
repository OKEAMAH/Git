# This file was automatically generated, do not edit.
# Edit file ci/bin/main.ml instead.

oc.build:static-x86_64-linux-binaries:
  image: ${build_deps_image_name}:runtime-build-dependencies--${build_deps_image_version}
  stage: build
  tags:
  - gcp
  needs:
  - trigger
  dependencies: []
  script:
  - ./scripts/ci/build_static_binaries.sh
  before_script:
  - ./scripts/ci/take_ownership.sh
  - eval $(opam env)
  variables:
    ARCH: x86_64
    EXECUTABLE_FILES: script-inputs/released-executables
  artifacts:
    expire_in: 90 days
    paths:
    - octez-binaries/$ARCH/*
oc.build:static-arm64-linux-binaries:
  image: ${build_deps_image_name}:runtime-build-dependencies--${build_deps_image_version}
  stage: build
  tags:
  - gcp_arm64
  dependencies: []
  script:
  - ./scripts/ci/build_static_binaries.sh
  before_script:
  - ./scripts/ci/take_ownership.sh
  - eval $(opam env)
  variables:
    ARCH: arm64
    EXECUTABLE_FILES: script-inputs/released-executables
  artifacts:
    expire_in: 90 days
    paths:
    - octez-binaries/$ARCH/*
oc.docker:amd64:
  image: ${CI_REGISTRY}/tezos/docker-images/ci-docker:v1.9.0
  stage: build
  tags:
  - gcp
  dependencies: []
  script:
  - ./scripts/ci/docker_release.sh
  before_script:
  - ./scripts/ci/docker_wait_for_daemon.sh
  - ./scripts/ci/docker_check_version.sh ${DOCKER_VERSION}
  - ./scripts/ci/docker_registry_auth.sh
  services:
  - docker:${DOCKER_VERSION}-dind
  variables:
    DOCKER_VERSION: 24.0.6
    DOCKER_BUILD_TARGET: without-evm-artifacts
    IMAGE_ARCH_PREFIX: amd64_
    CI_DOCKER_HUB: "true"
    EXECUTABLE_FILES: script-inputs/released-executables
oc.docker:arm64:
  image: ${CI_REGISTRY}/tezos/docker-images/ci-docker:v1.9.0
  stage: build
  tags:
  - gcp_arm64
  dependencies: []
  script:
  - ./scripts/ci/docker_release.sh
  before_script:
  - ./scripts/ci/docker_wait_for_daemon.sh
  - ./scripts/ci/docker_check_version.sh ${DOCKER_VERSION}
  - ./scripts/ci/docker_registry_auth.sh
  services:
  - docker:${DOCKER_VERSION}-dind
  variables:
    DOCKER_VERSION: 24.0.6
    DOCKER_BUILD_TARGET: without-evm-artifacts
    IMAGE_ARCH_PREFIX: arm64_
    CI_DOCKER_HUB: "true"
    EXECUTABLE_FILES: script-inputs/released-executables
oc.build:dpkg:amd64:
  image: debian:bookworm
  stage: build
  tags:
  - gcp
  needs: []
  dependencies: []
  script:
  - wget https://sh.rustup.rs/rustup-init.sh
  - chmod +x rustup-init.sh
  - ./rustup-init.sh --profile minimal --default-toolchain  $recommended_rust_version
    -y
  - . $HOME/.cargo/env
  - export OPAMYES="true"
  - opam init --bare --disable-sandboxing
  - make build-deps
  - eval $(opam env)
  - make $TARGET
  before_script:
  - . ./scripts/version.sh
  - apt update
  - apt-get install -y rsync git m4 build-essential patch unzip wget opam jq bc autoconf
    cmake libev-dev libffi-dev libgmp-dev libhidapi-dev pkg-config zlib1g-dev
  variables:
    TARGET: dpkg
    OCTEZ_PKGMAINTAINER: nomadic-labs
    BLST_PORTABLE: "yes"
    ARCH: amd64
  artifacts:
    name: ${TARGET}-$ARCH-$CI_COMMIT_REF_SLUG
    expire_in: 1 day
    paths:
    - octez-*.deb
    when: on_success
oc.build:rpm:amd64:
  image: fedora:39
  stage: build
  tags:
  - gcp
  needs: []
  dependencies: []
  script:
  - wget https://sh.rustup.rs/rustup-init.sh
  - chmod +x rustup-init.sh
  - ./rustup-init.sh --profile minimal --default-toolchain  $recommended_rust_version
    -y
  - . $HOME/.cargo/env
  - export OPAMYES="true"
  - opam init --bare --disable-sandboxing
  - make build-deps
  - eval $(opam env)
  - make $TARGET
  before_script:
  - . ./scripts/version.sh
  - dnf update -y
  - dnf install -y libev-devel gmp-devel hidapi-devel libffi-devel zlib-devel libpq-devel
    m4 perl git pkg-config rpmdevtools python3-devel python3-setuptools wget opam
    rsync which cargo autoconf mock systemd systemd-rpm-macros cmake python3-wheel
    python3-tox-current-env gcc-c++
  variables:
    TARGET: rpm
    OCTEZ_PKGMAINTAINER: nomadic-labs
    BLST_PORTABLE: "yes"
    ARCH: amd64
  artifacts:
    name: ${TARGET}-$ARCH-$CI_COMMIT_REF_SLUG
    expire_in: 1 day
    paths:
    - octez-*.rpm
    when: on_success
docker:merge_manifests:
  image: ${CI_REGISTRY}/tezos/docker-images/ci-docker:v1.9.0
  stage: prepare_release
  tags:
  - gcp
  needs:
  - oc.docker:amd64
  - oc.docker:arm64
  dependencies: []
  script:
  - ./scripts/ci/docker_merge_manifests.sh
  before_script:
  - ./scripts/ci/docker_wait_for_daemon.sh
  - ./scripts/ci/docker_check_version.sh ${DOCKER_VERSION}
  - ./scripts/ci/docker_registry_auth.sh
  services:
  - docker:${DOCKER_VERSION}-dind
  variables:
    DOCKER_VERSION: 24.0.6
    CI_DOCKER_HUB: "true"
gitlab:release:
  image: ${CI_REGISTRY}/tezos/docker-images/ci-release:v1.1.0
  stage: publish_release_gitlab
  tags:
  - gcp
  needs:
  - oc.build:static-x86_64-linux-binaries
  - oc.build:static-arm64-linux-binaries
  - oc.build:dpkg:amd64
  - oc.build:rpm:amd64
  dependencies:
  - oc.build:static-x86_64-linux-binaries
  - oc.build:static-arm64-linux-binaries
  - oc.build:dpkg:amd64
  - oc.build:rpm:amd64
  interruptible: false
  script:
  - ./scripts/ci/gitlab-release.sh
opam:release:
  image: ${build_deps_image_name}:runtime-build-test-dependencies--${build_deps_image_version}
  stage: publish_release
  tags:
  - gcp
  dependencies: []
  interruptible: false
  script:
  - ./scripts/ci/opam-release.sh
