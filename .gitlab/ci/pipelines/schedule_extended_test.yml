# This file was automatically generated, do not edit.
# Edit file ci/bin/main.ml instead.

oc.build_arm64-released:
  image: ${build_deps_image_name}:runtime-build-dependencies--${build_deps_image_version}
  stage: build
  tags:
  - gcp_arm64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: always
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--arm64(?:$|,)/
    when: on_success
  - changes:
    - src/**/*
    - .gitlab/**/*
    - .gitlab-ci.yml
    when: manual
    allow_failure: true
  dependencies: []
  before_script:
  - ./scripts/ci/take_ownership.sh
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - ./scripts/ci/build_full_unreleased.sh
  variables:
    ARCH: arm64
    EXECUTABLE_FILES: script-inputs/released-executables
    GIT_SHORTREF: "00000000"
    GIT_DATETIME: 1970-01-01 00:00:00 +0000%
    GIT_VERSION: dev
  artifacts:
    name: build-$ARCH-$CI_COMMIT_REF_SLUG
    expire_in: 1 day
    paths:
    - octez-*
    - src/proto_*/parameters/*.json
    - _build/default/src/lib_protocol_compiler/bin/main_native.exe
    - _build/default/tezt/tests/main.exe
    - _build/default/contrib/octez_injector_server/octez_injector_server.exe
    when: on_success
oc.build_arm64-exp-dev-extra:
  image: ${build_deps_image_name}:runtime-build-dependencies--${build_deps_image_version}
  stage: build
  tags:
  - gcp_arm64
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: always
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--arm64(?:$|,)/
    when: on_success
  - changes:
    - src/**/*
    - .gitlab/**/*
    - .gitlab-ci.yml
    when: manual
    allow_failure: true
  dependencies: []
  before_script:
  - ./scripts/ci/take_ownership.sh
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - ./scripts/ci/build_full_unreleased.sh
  variables:
    ARCH: arm64
    EXECUTABLE_FILES: script-inputs/experimental-executables script-inputs/dev-executables
    GIT_SHORTREF: "00000000"
    GIT_DATETIME: 1970-01-01 00:00:00 +0000%
    GIT_VERSION: dev
    BUILD_EXTRA: src/bin_tps_evaluation/main_tps_evaluation.exe src/bin_octogram/octogram_main.exe
      tezt/tests/main.exe
  artifacts:
    name: build-$ARCH-$CI_COMMIT_REF_SLUG
    expire_in: 1 day
    paths:
    - octez-*
    - src/proto_*/parameters/*.json
    - _build/default/src/lib_protocol_compiler/bin/main_native.exe
    - _build/default/tezt/tests/main.exe
    - _build/default/contrib/octez_injector_server/octez_injector_server.exe
    when: on_success
oc.build_x86_64-released:
  image: ${build_deps_image_name}:runtime-build-dependencies--${build_deps_image_version}
  stage: build
  tags:
  - gcp
  rules:
  - changes:
    - src/**/*
    - etherlink/**/*
    - tezt/**/*
    - .gitlab/**/*
    - .gitlab-ci.yml
    - michelson_test_scripts/**/*
    - tzt_reference_test_suite/**/*
    when: on_success
  - if: $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: on_success
  needs:
  - trigger
  dependencies: []
  before_script:
  - ./scripts/ci/take_ownership.sh
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - ./scripts/ci/build_full_unreleased.sh
  variables:
    ARCH: x86_64
    EXECUTABLE_FILES: script-inputs/released-executables
    GIT_SHORTREF: "00000000"
    GIT_DATETIME: 1970-01-01 00:00:00 +0000%
    GIT_VERSION: dev
    COVERAGE_OPTIONS: --instrument-with bisect_ppx
  artifacts:
    name: build-$ARCH-$CI_COMMIT_REF_SLUG
    expire_in: 1 day
    paths:
    - octez-*
    - src/proto_*/parameters/*.json
    - _build/default/src/lib_protocol_compiler/bin/main_native.exe
    - _build/default/tezt/tests/main.exe
    - _build/default/contrib/octez_injector_server/octez_injector_server.exe
    when: on_success
oc.build_x86_64-exp-dev-extra:
  image: ${build_deps_image_name}:runtime-build-dependencies--${build_deps_image_version}
  stage: build
  tags:
  - gcp
  rules:
  - changes:
    - src/**/*
    - etherlink/**/*
    - tezt/**/*
    - .gitlab/**/*
    - .gitlab-ci.yml
    - michelson_test_scripts/**/*
    - tzt_reference_test_suite/**/*
    when: on_success
  - if: $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: on_success
  needs:
  - trigger
  dependencies: []
  before_script:
  - ./scripts/ci/take_ownership.sh
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - ./scripts/ci/build_full_unreleased.sh
  variables:
    ARCH: x86_64
    EXECUTABLE_FILES: script-inputs/experimental-executables script-inputs/dev-executables
    GIT_SHORTREF: "00000000"
    GIT_DATETIME: 1970-01-01 00:00:00 +0000%
    GIT_VERSION: dev
    BUILD_EXTRA: src/bin_tps_evaluation/main_tps_evaluation.exe src/bin_octogram/octogram_main.exe
      tezt/tests/main.exe contrib/octez_injector_server/octez_injector_server.exe
    COVERAGE_OPTIONS: --instrument-with bisect_ppx
  artifacts:
    name: build-$ARCH-$CI_COMMIT_REF_SLUG
    expire_in: 1 day
    paths:
    - octez-*
    - src/proto_*/parameters/*.json
    - _build/default/src/lib_protocol_compiler/bin/main_native.exe
    - _build/default/tezt/tests/main.exe
    - _build/default/contrib/octez_injector_server/octez_injector_server.exe
    when: on_success
oc.build_kernels:
  image: ${build_deps_image_name}:rust-toolchain--${build_deps_image_version}
  stage: build
  tags:
  - gcp
  rules:
  - changes:
    - src/**/*
    - etherlink/**/*
    - tezt/**/*
    - .gitlab/**/*
    - .gitlab-ci.yml
    - michelson_test_scripts/**/*
    - tzt_reference_test_suite/**/*
    when: on_success
  needs:
  - trigger
  dependencies: []
  cache:
  - key: kernels
    paths:
    - cargo/
  - key: kernels-sccache
    paths:
    - _sccache
  script:
  - make -f kernels.mk build
  variables:
    SCCACHE_DIR: $CI_PROJECT_DIR/_sccache
    RUSTC_WRAPPER: sccache
    CC: clang
    CARGO_HOME: $CI_PROJECT_DIR/cargo
    NATIVE_TARGET: x86_64-unknown-linux-musl
  artifacts:
    name: build-kernels-$CI_COMMIT_REF_SLUG
    expire_in: 1 day
    paths:
    - evm_kernel.wasm
    - smart-rollup-installer
    - sequenced_kernel.wasm
    - tx_kernel.wasm
    - tx_kernel_dal.wasm
    - dal_echo_kernel.wasm
    - risc-v-sandbox
    - risc-v-dummy.elf
    - src/risc_v/tests/inline_asm/rv64-inline-asm-tests
    when: on_success
oc.tezt:fetch-records:
  image: ${build_deps_image_name}:runtime-build-dependencies--${build_deps_image_version}
  stage: build
  tags:
  - gcp
  rules:
  - changes:
    - src/**/*
    - etherlink/**/*
    - tezt/**/*
    - .gitlab/**/*
    - .gitlab-ci.yml
    - michelson_test_scripts/**/*
    - tzt_reference_test_suite/**/*
    when: on_success
  dependencies: []
  allow_failure: true
  before_script:
  - ./scripts/ci/take_ownership.sh
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - dune exec scripts/ci/update_records/update.exe -- --log-file tezt-fetch-records.log
    --test-arg from=last-merged-pipeline --info
  after_script:
  - ./scripts/ci/filter_corrupted_records.sh
  artifacts:
    expire_in: 4 hours
    paths:
    - tezt-fetch-records.log
    - tezt/records/*.json
    - tezt/records/*.json.broken
    when: always
opam:prepare:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - trigger
  dependencies: []
  before_script:
  - eval $(opam env)
  script:
  - git init _opam-repo-for-release
  - ./scripts/opam-prepare-repo.sh dev ./ ./_opam-repo-for-release
  - git -C _opam-repo-for-release add packages
  - git -C _opam-repo-for-release commit -m "tezos packages"
  artifacts:
    paths:
    - _opam-repo-for-release/
opam:bls12-381:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 7 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: bls12-381
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-accuser-Proxford:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-accuser-Proxford
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-accuser-PtNairob:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-accuser-PtNairob
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-alcotezt:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 7 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-alcotezt
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-baker-Proxford:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-baker-Proxford
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-baker-PtNairob:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-baker-PtNairob
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-client:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-client
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-codec:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-codec
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-crawler:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-crawler
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-dac-client:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-dac-client
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-dac-node:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-dac-node
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-distributed-internal:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 7 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-distributed-internal
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-distributed-lwt-internal:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 7 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-distributed-lwt-internal
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-injector:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-injector
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-internal-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 7 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-internal-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-l2-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-l2-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 7 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-node:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-node
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-node-config:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-node-config
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-proto-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-proto-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-000-Ps9mPmXa-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-000-Ps9mPmXa-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-001-PtCJ7pwo-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-001-PtCJ7pwo-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-002-PsYLVpVv-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-002-PsYLVpVv-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-003-PsddFKi3-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-003-PsddFKi3-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-004-Pt24m4xi-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-004-Pt24m4xi-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-005-PsBabyM1-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-005-PsBabyM1-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-006-PsCARTHA-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-006-PsCARTHA-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-007-PsDELPH1-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-007-PsDELPH1-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-008-PtEdo2Zk-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-008-PtEdo2Zk-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-009-PsFLoren-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-009-PsFLoren-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-010-PtGRANAD-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-010-PtGRANAD-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-011-PtHangz2-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-011-PtHangz2-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-012-Psithaca-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-012-Psithaca-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-013-PtJakart-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-013-PtJakart-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-014-PtKathma-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-014-PtKathma-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-015-PtLimaPt-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-015-PtLimaPt-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-016-PtMumbai-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-016-PtMumbai-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-017-PtNairob-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-017-PtNairob-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-018-Proxford-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-018-Proxford-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-alpha-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-alpha-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-compiler:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-protocol-compiler
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-proxy-server:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-proxy-server
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-rpc-process:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-rpc-process
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-shell-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-shell-libs
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-signer:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-signer
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-smart-rollup-node:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-smart-rollup-node
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-smart-rollup-node-Proxford:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-smart-rollup-node-Proxford
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-smart-rollup-node-PtNairob:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-smart-rollup-node-PtNairob
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-smart-rollup-node-alpha:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-smart-rollup-node-alpha
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-smart-rollup-node-lib:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-smart-rollup-node-lib
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-smart-rollup-wasm-debugger:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-smart-rollup-wasm-debugger
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-smart-rollup-wasm-debugger-lib:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-smart-rollup-wasm-debugger-lib
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-smart-rollup-wasm-debugger-plugin:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 7 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-smart-rollup-wasm-debugger-plugin
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-version:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: octez-version
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-benchmark:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 7 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-benchmark
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-client-demo-counter:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-client-demo-counter
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-client-genesis:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-client-genesis
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-dac-client-lib:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-dac-client-lib
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-dac-lib:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-dac-lib
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-dac-node-lib:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-dac-node-lib
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-dal-node-lib:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-dal-node-lib
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-dal-node-services:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 7 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-dal-node-services
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-openapi:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 7 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-openapi
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-000-Ps9mPmXa:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-000-Ps9mPmXa
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-001-PtCJ7pwo:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-001-PtCJ7pwo
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-002-PsYLVpVv:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-002-PsYLVpVv
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-003-PsddFKi3:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-003-PsddFKi3
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-004-Pt24m4xi:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-004-Pt24m4xi
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-005-PsBABY5H:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-005-PsBABY5H
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-005-PsBabyM1:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-005-PsBabyM1
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-006-PsCARTHA:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-006-PsCARTHA
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-007-PsDELPH1:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-007-PsDELPH1
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-008-PtEdo2Zk:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-008-PtEdo2Zk
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-008-PtEdoTez:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-008-PtEdoTez
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-009-PsFLoren:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-009-PsFLoren
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-010-PtGRANAD:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-010-PtGRANAD
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-011-PtHangz2:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-011-PtHangz2
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-012-Psithaca:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-012-Psithaca
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-013-PtJakart:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-013-PtJakart
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-014-PtKathma:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-014-PtKathma
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-015-PtLimaPt:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-015-PtLimaPt
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-016-PtMumbai:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-016-PtMumbai
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-017-PtNairob:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-017-PtNairob
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-018-Proxford:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-018-Proxford
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-alpha:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-alpha
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-demo-counter:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-demo-counter
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-demo-noops:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-demo-noops
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-genesis:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-protocol-genesis
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-proxy-server-config:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 7 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezos-proxy-server-config
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezt-tezos:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--opam(?:$|,)/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 7 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  before_script:
  - eval $(opam env)
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  variables:
    RUNTEZTALIAS: "true"
    package: tezt-tezos
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
oc.install_bin_ubuntu_focal:
  image: public.ecr.aws/lts/ubuntu:20.04_stable
  stage: test
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: always
  - changes:
    - docs/introduction/install*.sh
    - docs/introduction/compile*.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: on_success
  - when: manual
    allow_failure: true
  needs:
  - trigger
  dependencies: []
  script:
  - ./docs/introduction/install-bin-ubuntu.sh
oc.install_bin_ubuntu_jammy:
  image: public.ecr.aws/lts/ubuntu:22.04_stable
  stage: test
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: always
  - changes:
    - docs/introduction/install*.sh
    - docs/introduction/compile*.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: on_success
  - when: manual
    allow_failure: true
  needs:
  - trigger
  dependencies: []
  script:
  - ./docs/introduction/install-bin-ubuntu.sh
oc.install_bin_fedora_37:
  image: fedora:37
  stage: test
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: always
  - changes:
    - docs/introduction/install*.sh
    - docs/introduction/compile*.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: on_success
  - when: manual
    allow_failure: true
  needs:
  - trigger
  dependencies: []
  script:
  - ./docs/introduction/install-bin-fedora.sh
oc.install_bin_rc_ubuntu_focal:
  image: public.ecr.aws/lts/ubuntu:20.04_stable
  stage: test
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: always
  - changes:
    - docs/introduction/install*.sh
    - docs/introduction/compile*.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: on_success
  - when: manual
    allow_failure: true
  needs:
  - trigger
  dependencies: []
  script:
  - ./docs/introduction/install-bin-ubuntu.sh rc
oc.install_bin_rc_ubuntu_jammy:
  image: public.ecr.aws/lts/ubuntu:22.04_stable
  stage: test
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: always
  - changes:
    - docs/introduction/install*.sh
    - docs/introduction/compile*.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: on_success
  - when: manual
    allow_failure: true
  needs:
  - trigger
  dependencies: []
  script:
  - ./docs/introduction/install-bin-ubuntu.sh rc
oc.install_bin_rc_fedora_37:
  image: fedora:37
  stage: test
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: always
  - changes:
    - docs/introduction/install*.sh
    - docs/introduction/compile*.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: on_success
  - when: manual
    allow_failure: true
  needs:
  - trigger
  dependencies: []
  script:
  - ./docs/introduction/install-bin-fedora.sh rc
oc.install_opam_focal:
  image: ocaml/opam:ubuntu-20.04
  stage: test
  tags:
  - gcp
  needs:
  - trigger
  dependencies: []
  allow_failure: true
  script:
  - ./docs/introduction/install-opam.sh
  variables:
    OPAMJOBS: "4"
  when: manual
oc.compile_release_sources_bullseye:
  image: ocaml/opam:debian-11
  stage: test
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: always
  - changes:
    - docs/introduction/install*.sh
    - docs/introduction/compile*.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: on_success
  - when: manual
    allow_failure: true
  needs:
  - trigger
  dependencies: []
  script:
  - ./docs/introduction/compile-sources.sh tezos/tezos latest-release
oc.compile_sources_bullseye:
  image: ocaml/opam:debian-11
  stage: test
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: always
  - changes:
    - docs/introduction/install*.sh
    - docs/introduction/compile*.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: on_success
  - when: manual
    allow_failure: true
  needs:
  - trigger
  dependencies: []
  script:
  - ./docs/introduction/compile-sources.sh ${CI_MERGE_REQUEST_SOURCE_PROJECT_PATH:-tezos/tezos}
    ${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME:-master}
tezt_flaky:
  image: ${build_deps_image_name}:runtime-e2etest-dependencies--${build_deps_image_version}
  stage: test
  tags:
  - gcp_tezt
  needs:
  - oc.build_x86_64-released
  - oc.build_x86_64-exp-dev-extra
  - oc.build_kernels
  - oc.tezt:fetch-records
  dependencies:
  - oc.build_x86_64-released
  - oc.build_x86_64-exp-dev-extra
  - oc.build_kernels
  - oc.tezt:fetch-records
  before_script:
  - . ./scripts/version.sh
  - eval $(opam env)
  script:
  - echo "TESTS=\"${TESTS}\" JUNIT=\"${JUNIT}\" CI_NODE_INDEX=\"${CI_NODE_INDEX}\"
    CI_NODE_TOTAL=\"${CI_NODE_TOTAL}\" TEZT_PARALLEL=\"${TEZT_PARALLEL}\" TEZT_VARIANT=\"${TEZT_VARIANT}\""
  - ./scripts/ci/exit_code.sh timeout -k 60 1860 ./scripts/ci/exit_code.sh _build/default/tezt/tests/main.exe
    ${TESTS} --color --log-buffer-size 5000 --log-file tezt.log --global-timeout 1800
    --on-unknown-regression-files fail --junit ${JUNIT} --from-record tezt/records
    --job ${CI_NODE_INDEX:-1}/${CI_NODE_TOTAL:-1} --record tezt-results-${CI_NODE_INDEX}${TEZT_VARIANT}.json
    --job-count ${TEZT_PARALLEL:-3} --retry ${TEZT_RETRY:-1}
  - ./scripts/ci/merge_coverage.sh
  variables:
    JUNIT: tezt-junit.xml
    TEZT_VARIANT: ""
    TESTS: flaky
    TEZT_RETRY: "3"
    TEZT_PARALLEL: "1"
    BISECT_FILE: $CI_PROJECT_DIR/_coverage_output/
  artifacts:
    name: coverage-files-$CI_JOB_ID
    expire_in: 3 days
    paths:
    - tezt.log
    - tezt-*.log
    - tezt-results-${CI_NODE_INDEX}${TEZT_VARIANT}.json
    - $JUNIT
    - $BISECT_FILE
    reports:
      junit: $JUNIT
    when: always
  retry: 2
  parallel: 1
documentation:linkcheck:
  image: ${build_deps_image_name}:runtime-build-test-dependencies--${build_deps_image_version}
  stage: doc
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: always
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--docs(?:$|,)/
    when: on_success
  - when: manual
    allow_failure: true
  needs: []
  dependencies: []
  allow_failure: true
  before_script:
  - . ./scripts/version.sh
  - eval $(opam env)
  - . $HOME/.venv/bin/activate
  script:
  - make all
  - make -C docs redirectcheck
  - make -C docs linkcheck
oc.install_python_focal:
  image: public.ecr.aws/lts/ubuntu:20.04_stable
  stage: doc
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: always
  - changes:
    - docs/developer/install-python-debian-ubuntu.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: on_success
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--docs(?:$|,)/
    when: on_success
  - when: manual
    allow_failure: true
  needs:
  - trigger
  dependencies: []
  script:
  - ./docs/developer/install-python-debian-ubuntu.sh ${CI_MERGE_REQUEST_SOURCE_PROJECT_PATH:-tezos/tezos}
    ${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME:-master}
oc.install_python_jammy:
  image: public.ecr.aws/lts/ubuntu:22.04_stable
  stage: doc
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: always
  - changes:
    - docs/developer/install-python-debian-ubuntu.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: on_success
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--docs(?:$|,)/
    when: on_success
  - when: manual
    allow_failure: true
  needs:
  - trigger
  dependencies: []
  script:
  - ./docs/developer/install-python-debian-ubuntu.sh ${CI_MERGE_REQUEST_SOURCE_PROJECT_PATH:-tezos/tezos}
    ${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME:-master}
oc.install_python_bullseye:
  image: debian:bullseye
  stage: doc
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: always
  - changes:
    - docs/developer/install-python-debian-ubuntu.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: on_success
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|,)ci--docs(?:$|,)/
    when: on_success
  - when: manual
    allow_failure: true
  needs:
  - trigger
  dependencies: []
  script:
  - ./docs/developer/install-python-debian-ubuntu.sh ${CI_MERGE_REQUEST_SOURCE_PROJECT_PATH:-tezos/tezos}
    ${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME:-master}
