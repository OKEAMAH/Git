# Basic, specialised, minimal, orthogonal templates

# Some settings we want by default on all jobs that cannot be set
# through the key `default` in `.gitlab-ci.yml`.
.default_settings_template:
  # `dependencies` are empty be default. Each individual job or
  # template requiring artifacts from preceeding jobs should declare
  # their dependencies locally.
  dependencies: []
  tags: ["gcp"]

# Default runner tags for jobs in the build stage
.tags_template__build:
  tags: ["gcp"]

# Default runner tags for arm64 jobs in the build stage
.tags_template__build_arm64:
  tags: ["gcp_arm64"]

# Block the propagation of the GCP tag for standard jobs
.tags_template__no_gcp:
  tags: []

# Block the propagation of the GCP tag for arm64 jobs
.tags_template__no_gcp_arm64:
  tags: ["arm64"]

# Only if octez source code has changed
.rules__octez_changes:
  rules:
    - if:
      changes:
        paths:
          - src/**/*
      when: on_success

# Only if octez source code has changed or Marge Bot is the trigger
.rules__octez_changes_or_margebot:
  rules:
    - if:
      changes:
        paths:
          - src/**/*
      when: on_success
    - if: '$GITLAB_USER_LOGIN == "nomadic-margebot"'
      when: on_success

# Only if documentation has changed
.rules__octez_docs_changes:
  rules:
    - if:
      changes:
        paths:
          - docs/**/*
          - src/**/*
      when: on_success

# Add variables for bisect_ppx instrumentation
.oc.template__coverage:
  variables:
    COVERAGE_OPTIONS: "--instrument-with bisect_ppx"
    BISECT_FILE: "$CI_PROJECT_DIR/_coverage_output/"
    SLACK_COVERAGE_CHANNEL: "C02PHBE7W73"

.oc.build_template:
  extends:
    - .default_settings_template
    - .image_template__runtime_build_dependencies
    - .oc.template__coverage
  stage: build
  before_script:
    # FIXME: https://gitlab.com/tezos/tezos/-/issues/2865
    - sudo chown -R $(id -u):$(id -g) $CI_PROJECT_DIR
    - . ./scripts/version.sh

.oc.kernels_template:
  extends:
    - .default_settings_template
    - .image_template__rust_toolchain
    - .rules__octez_changes
  stage: build
  needs: [trigger]
  before_script:
    - make -f kernels.mk build-dev-deps
  variables:
    CC: clang
    CARGO_HOME: $CI_PROJECT_DIR/cargo
    NATIVE_TARGET: x86_64-unknown-linux-musl
  cache:
    - key: kernels
      paths:
        - cargo/
  artifacts:
    name: "build-kernels-$CI_COMMIT_REF_SLUG"
    paths:
      - evm_kernel.wasm
      - sequenced_kernel.wasm
      - smart-rollup-installer
      - risc-v-sandbox
      - risc-v-dummy.elf
    expire_in: 1 day
    when: on_success
