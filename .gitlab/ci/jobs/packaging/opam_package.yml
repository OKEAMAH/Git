# This file was automatically generated, do not edit.
# Edit file ci/bin/main.ml instead.

opam:bls12-381:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 7 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: bls12-381
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-accuser-Proxford:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-accuser-Proxford
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-accuser-PtNairob:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-accuser-PtNairob
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-alcotezt:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 7 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-alcotezt
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-baker-Proxford:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-baker-Proxford
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-baker-PtNairob:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-baker-PtNairob
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-client:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-client
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-codec:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-codec
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-crawler:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-crawler
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-dac-client:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-dac-client
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-dac-node:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-dac-node
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-distributed-internal:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 7 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-distributed-internal
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-distributed-lwt-internal:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 7 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-distributed-lwt-internal
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-injector:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-injector
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-internal-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 7 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-internal-libs
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-l2-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-l2-libs
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 7 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-libs
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-node:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-node
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-node-config:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-node-config
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-proto-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-proto-libs
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-000-Ps9mPmXa-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-protocol-000-Ps9mPmXa-libs
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-001-PtCJ7pwo-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-protocol-001-PtCJ7pwo-libs
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-002-PsYLVpVv-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-protocol-002-PsYLVpVv-libs
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-003-PsddFKi3-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-protocol-003-PsddFKi3-libs
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-004-Pt24m4xi-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-protocol-004-Pt24m4xi-libs
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-005-PsBabyM1-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-protocol-005-PsBabyM1-libs
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-006-PsCARTHA-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-protocol-006-PsCARTHA-libs
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-007-PsDELPH1-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-protocol-007-PsDELPH1-libs
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-008-PtEdo2Zk-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-protocol-008-PtEdo2Zk-libs
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-009-PsFLoren-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-protocol-009-PsFLoren-libs
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-010-PtGRANAD-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-protocol-010-PtGRANAD-libs
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-011-PtHangz2-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-protocol-011-PtHangz2-libs
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-012-Psithaca-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-protocol-012-Psithaca-libs
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-013-PtJakart-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-protocol-013-PtJakart-libs
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-014-PtKathma-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-protocol-014-PtKathma-libs
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-015-PtLimaPt-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 3 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 3 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 3 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-protocol-015-PtLimaPt-libs
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-016-PtMumbai-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-protocol-016-PtMumbai-libs
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-017-PtNairob-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-protocol-017-PtNairob-libs
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-018-Proxford-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-protocol-018-Proxford-libs
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-alpha-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-protocol-alpha-libs
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-protocol-compiler:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-protocol-compiler
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-proxy-server:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-proxy-server
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-rpc-process:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-rpc-process
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-shell-libs:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-shell-libs
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-signer:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-signer
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-smart-rollup-node:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-smart-rollup-node
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-smart-rollup-node-Proxford:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-smart-rollup-node-Proxford
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-smart-rollup-node-PtNairob:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-smart-rollup-node-PtNairob
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-smart-rollup-node-alpha:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-smart-rollup-node-alpha
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-smart-rollup-node-lib:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-smart-rollup-node-lib
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-smart-rollup-wasm-debugger:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 1 minute
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 1 minute
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 1 minute
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-smart-rollup-wasm-debugger
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-smart-rollup-wasm-debugger-lib:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-smart-rollup-wasm-debugger-lib
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-smart-rollup-wasm-debugger-plugin:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 7 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-smart-rollup-wasm-debugger-plugin
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:octez-version:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: octez-version
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-benchmark:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 7 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-benchmark
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-client-demo-counter:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-client-demo-counter
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-client-genesis:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-client-genesis
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-dac-client-lib:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-dac-client-lib
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-dac-lib:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-dac-lib
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-dac-node-lib:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 2 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 2 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 2 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-dac-node-lib
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-dal-node-lib:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-dal-node-lib
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-dal-node-services:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 7 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-dal-node-services
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-openapi:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 7 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-openapi
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-000-Ps9mPmXa:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-protocol-000-Ps9mPmXa
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-001-PtCJ7pwo:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-protocol-001-PtCJ7pwo
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-002-PsYLVpVv:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-protocol-002-PsYLVpVv
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-003-PsddFKi3:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 4 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 4 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 4 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-protocol-003-PsddFKi3
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-004-Pt24m4xi:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-protocol-004-Pt24m4xi
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-005-PsBABY5H:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-protocol-005-PsBABY5H
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-005-PsBabyM1:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-protocol-005-PsBabyM1
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-006-PsCARTHA:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-protocol-006-PsCARTHA
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-007-PsDELPH1:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-protocol-007-PsDELPH1
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-008-PtEdo2Zk:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-protocol-008-PtEdo2Zk
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-008-PtEdoTez:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-protocol-008-PtEdoTez
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-009-PsFLoren:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-protocol-009-PsFLoren
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-010-PtGRANAD:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-protocol-010-PtGRANAD
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-011-PtHangz2:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-protocol-011-PtHangz2
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-012-Psithaca:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-protocol-012-Psithaca
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-013-PtJakart:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-protocol-013-PtJakart
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-014-PtKathma:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 5 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 5 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 5 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-protocol-014-PtKathma
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-015-PtLimaPt:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-protocol-015-PtLimaPt
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-016-PtMumbai:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-protocol-016-PtMumbai
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-017-PtNairob:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-protocol-017-PtNairob
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-018-Proxford:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-protocol-018-Proxford
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-alpha:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-protocol-alpha
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-demo-counter:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-protocol-demo-counter
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-demo-noops:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-protocol-demo-noops
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-protocol-genesis:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 6 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 6 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 6 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-protocol-genesis
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezos-proxy-server-config:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 7 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezos-proxy-server-config
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
opam:tezt-tezos:
  image: ${build_deps_image_name}:runtime-prebuild-dependencies--${build_deps_image_version}
  stage: packaging
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: delayed
    start_in: 7 minutes
  - if: $CI_MERGE_REQUEST_LABELS =~ /(?:^|[,])ci--opam(?:$|[,])/
    when: delayed
    start_in: 7 minutes
  - changes:
    - '**/dune'
    - '**/dune.inc'
    - '**/*.dune.inc'
    - '**/dune-project'
    - '**/dune-workspace'
    - '**/*.opam'
    - .gitlab/ci/jobs/packaging/opam:prepare.yml
    - .gitlab/ci/jobs/packaging/opam_package.yml
    - manifest/manifest.ml
    - manifest/main.ml
    - scripts/opam-prepare-repo.sh
    - scripts/version.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event" && $GITLAB_USER_LOGIN == "nomadic-margebot"
    when: delayed
    start_in: 7 minutes
  - when: never
  needs:
  - opam:prepare
  dependencies:
  - opam:prepare
  cache:
    key: opam-sccache
    paths:
    - _build/_sccache
  script:
  - opam remote add dev-repo ./_opam-repo-for-release
  - opam install --yes ${package}.dev
  - opam reinstall --yes --with-test ${package}.dev
  after_script:
  - eval $(opam env)
  - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
  before_script:
  - eval $(opam env)
  variables:
    RUNTEZTALIAS: "true"
    SCCACHE_DIR: $CI_PROJECT_DIR/_build/_sccache
    RUSTC_WRAPPER: sccache
    package: tezt-tezos
  artifacts:
    expire_in: 1 week
    paths:
    - opam_logs/
    when: always
  retry: 2
