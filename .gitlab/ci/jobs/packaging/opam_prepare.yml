# This template is used by the opam test jobs defined in
# .gitlab/ci/jobs/packaging/opam_package.yml
.opam_template:
  extends:
    - .default_settings_template
    - .image_template__runtime_prebuild_dependencies_template
  stage: packaging
  # FIXME: https://gitlab.com/nomadic-labs/tezos/-/issues/663
  # FIXME: https://gitlab.com/nomadic-labs/tezos/-/issues/664
  # At the time of writing, the opam tests were quite flaky.
  # Therefore, a retry was added. This should be removed once the
  # underlying tests have been fixed.
  retry: 2
  script:
    ## Debug the cache
    - '[ -d _build ] && ls -a _build || true'
    - env | grep CACHE
    ### Inspect size and contents of Dune cache
    - '[ -d $XDG_CACHE_HOME ] && { du -hs $XDG_CACHE_HOME; find $XDG_CACHE_HOME/dune/db/ -type f | wc -l ; } || true'
    # Prepare opam to simplify running locally
    - "[ -d _opam-repo-for-release ] || make -C ${CI_PROJECT_DIR}/.gitlab/ci opam-prepare > /dev/null 2>&1"
    - make  -C ${CI_PROJECT_DIR}/.gitlab/ci opam-configure
  needs: [opam:prepare]
  dependencies: [opam:prepare]
  after_script:
    # Stores logs in opam_logs for artifacts and outputs an excerpt on failure.
    - OPAM_LOGS=opam_logs ./scripts/ci/opam_handle_output.sh
    - '[ -d $XDG_CACHE_HOME ] && { du -hs $XDG_CACHE_HOME ; find $XDG_CACHE_HOME/dune/db/ -type f | wc -l ; } || true'
  artifacts:
    paths:
      - opam_logs/
    expire_in: 1 week
    when: always
  variables:
    RUNTEZTALIAS: "true"
    DUNE_CACHE: "enabled"
    # We store caches in _build directory for two reasons: (1) the
    # _build folder is excluded from opam's rsync. (2) gitlab ci cache
    # requires that cached files are in a sub-folder of the checkout.
    # Ideally we would store it in /home/tezos. This would put it in
    # the same volume as the opam switch, which would allow us to use
    # the Dune cache's hardlink mode which is more performant.
    XDG_CACHE_HOME: $CI_PROJECT_DIR/_build/_dune_cache
    # GitLab Runner does not allow storing caches outside the build
    # directory per default, so we're forced to use copy mode.
    DUNE_CACHE_STORAGE_MODE: "copy"
    # OPAMVERBOSE: "2"
  cache:
    # Note that we have one cache bucket per CI_JOB_NAME_SLUG, not per
    # CI_JOB_NAME_SLUG + CI_COMMIT_REF_SLUG to enable sharing between
    # branches.
    key: opam-cache-$CI_JOB_NAME_SLUG
    paths:
      - _build/_dune_cache

opam:prepare:
  extends:
    - .default_settings_template
    - .image_template__runtime_prebuild_dependencies_template
    - .rules_template__trigger_opam_batch_1
  stage: packaging
  needs: [trigger]
  script:
    - make -C ${CI_PROJECT_DIR}/.gitlab/ci opam-prepare
  artifacts:
    paths:
      - _opam-repo-for-release/
