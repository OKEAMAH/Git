.oc.build:
  extends:
    - .oc.build_template
    - .rules__octez_changes
  variables:
    ARCH: ""
    # We fix the value of GIT_{SHORTREF,DATETIME,VERSION} (these are
    # read by src/lib_version and output by the binaries `--version`
    # option). Fixing these values on development builds improves
    # cache usage.
    GIT_SHORTREF: "00000000"
    GIT_DATETIME: "1970-01-01 00:00:00 +0000%"
    GIT_VERSION: "dev"
  script:
    - ./scripts/ci/build_full_unreleased.sh
  artifacts:
    name: "build-$ARCH-$CI_COMMIT_REF_SLUG"
    paths:
      - octez-*
      - src/proto_*/parameters/*.json
      - _build/default/src/lib_protocol_compiler/bin/main_native.exe
      - _build/default/tezt/tests/main.exe
      - _build/default/contrib/octez_injector_server/octez_injector_server.exe
    expire_in: 1 day
    when: on_success

# similar to the build template above, this template
# compiles all binaries using the static profile.
.oc.build_static_binaries_template:
  extends:
    - .default_settings_template
    - .image_template__runtime_build_dependencies
    - .rules__octez_changes
  stage: build
  variables:
    ARCH: ""
  before_script:
    - ./scripts/ci/take_ownership.sh
    - eval $(opam env)
  script:
    - ./scripts/ci/build_static_binaries.sh
  artifacts:
    paths:
      - "octez-binaries/$ARCH/*"

.oc.build_docker_release_template:
  extends:
    - .image_template__docker
    - .docker_auth_template
  variables:
    DOCKER_BUILD_TARGET: "without-evm-artifacts"
    IMAGE_ARCH_PREFIX: ""
  rules:
      - if: '$CI_COMMIT_BRANCH == "master"'
        when: on_success
      - changes:
          - scripts/**/*
          - script-inputs/**/*
          - src/**/*
          - tezt/**/*
          - vendors/**/*
          - dune
          - dune-project
          - dune-workspace
          - opam
          - Makefile
          - kernels.mk
          - build.Dockerfile
          - Dockerfile
          - .gitlab/**/*
          - .gitlab-ci.yml
        when: on_success
  script:
    - ./scripts/ci/docker_release.sh
