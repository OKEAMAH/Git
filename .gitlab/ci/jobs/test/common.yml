.test_template:
  extends:
    - .default_settings_template
    - .image_template__runtime_build_dependencies
    - .oc.template__coverage
    - .rules__octez_changes
  needs:
    - "oc.build_x86_64-released"
    - "oc.build_x86_64-exp-dev-extra"
  stage: test
  before_script:
    - . ./scripts/version.sh
    - eval $(opam env)
  retry: 2

# Merge coverage files after the execution
.oc.template__coverage_files:
  extends:
    - .oc.template__coverage
    - .rules__octez_changes
  artifacts:
    name: "coverage-files-$CI_JOB_ID"
    paths:
      - $BISECT_FILE
    expire_in: 1 day
    when: on_success

# We use the --job option to split tests into jobs of roughly the same
# duration. This is based on a file that contains timings of test results,
# generated with --record. To rebalance jobs, update this record with:
#
#   make && dune exec tezt/tests/main.exe -- --record tezt/test-results.json

.tezt_template:
  variables:
    JUNIT: "tezt-junit.xml"
    # if we do not set BISECT_FILE here, it will be empty, and include the
    # full CI_PROJECT_DIR in artifacts as per the template .tezt_template.
    BISECT_FILE: "$CI_PROJECT_DIR/_coverage_output/"
    TEZT_VARIANT: ""
  artifacts:
    reports:
      junit: $JUNIT
    paths:
      - tezt.log
      - tezt-*.log
      - tezt-results-${CI_NODE_INDEX}${TEZT_VARIANT}.json
      - $BISECT_FILE
      - $JUNIT
    # The record artifacts (tezt-results-$CI_NODE_INDEX.json) should
    # be stored for as long as a given commit on master is expected to
    # be HEAD in order to support auto-balancing. At the time of
    # writing, we have approximately 6 merges per day, so 1 day should
    # more than enough. However, we set it to 3 days to keep records
    # over the weekend. The tezt artifacts (including records and
    # coverage) take up roughly 2MB / job. Total artifact storage
    # becomes N*P*T*W where N is the days of retention (3 atm), P the
    # number of pipelines per day (~200 atm), T the number of Tezt
    # jobs per pipeline (60) and W the artifact size per tezt job
    # (2MB). This makes 35GB which is less than 0.5% than our total
    # artifact usage (https://gitlab.com/tezos/tezos/-/artifacts).
    expire_in: 3 day
    when: always
  script:
    - 'echo "TESTS: ${TESTS}, JUNIT: ${JUNIT}, CI_NODE_INDEX: ${CI_NODE_INDEX}, CI_NODE_TOTAL: ${CI_NODE_TOTAL}" TEZT_PARALLEL: ${TEZT_PARALLEL} TEZT_VARIANT: ${TEZT_VARIANT}'
    # For Tezt tests, there are multiple timeouts:
    # - --global-timeout is the internal timeout of Tezt, which only works if tests
    #   are cooperative;
    # - the "timeout" command, which we set to send SIGTERM to Tezt 60s after --global-timeout
    #   in case tests are not cooperative;
    # - the "timeout" command also sends SIGKILL 60s after having sent SIGTERM in case
    #   Tezt is still stuck;
    # - the CI timeout.
    # The use of the "timeout" command is to make sure that Tezt eventually exits,
    # because if the CI timeout is reached, there are no artefacts,
    # and thus no logs to investigate.
    # See also: https://gitlab.com/gitlab-org/gitlab/-/issues/19818
    - ./scripts/ci/exit_code.sh timeout -k 60 1860 ./scripts/ci/exit_code.sh _build/default/tezt/tests/main.exe
        ${TESTS}
        --color
        --log-buffer-size 5000
        --log-file tezt.log
        --global-timeout 1800
        --on-unknown-regression-files fail
        --junit ${JUNIT}
        --from-record tezt/records
        --job ${CI_NODE_INDEX:-1}/${CI_NODE_TOTAL:-1}
        --record tezt-results-${CI_NODE_INDEX}${TEZT_VARIANT}.json
        --job-count ${TEZT_PARALLEL:-3}
        --retry ${TEZT_RETRY:-1}
    - ./scripts/ci/merge_coverage.sh

# Common template for tezt jobs that use x86_64 binaries.
.tezt_tests:
  extends:
    - .test_template
    - .image_template__runtime_e2etest_dependencies
    - .oc.template__coverage_files
    - .tezt_template
  variables:
    # Certain tests can be blacklisted by modifying the TESTS variable.
    # Do not tests with the tag 'ci_disabled' and 'flaky'.
    # See tezt/lib_tezos/tag.mli for more information.
    TESTS: "/ci_disabled /flaky"
  dependencies:
    - "oc.build_x86_64-released"
    - "oc.build_x86_64-exp-dev-extra"
    - "oc.build_kernels"
    - "oc.tezt:fetch-records"
  needs:
    - "oc.build_x86_64-released"
    - "oc.build_x86_64-exp-dev-extra"
    - "oc.build_kernels"
    - "oc.tezt:fetch-records"
  # WARNING: if you increase the number of parallel jobs, you need to
  # update test_coverage.yml with the new list of jobs.
  parallel: 60
  tags:
    - gcp_tezt

.oc.unit_test_template:
  extends:
    - .test_template
    - .rules__octez_changes
  variables:
    ARCH: ""
    MAKE_TARGETS: ""
  script:
    - make $MAKE_TARGETS
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_SHA-${ARCH}"
    paths:
      - test_results
    reports:
      junit: test_results/*.xml
    expire_in: 1 day
    when: always

.oc.unit_test_template_x86_64:
  extends: .oc.unit_test_template
  variables:
    ARCH: "x86_64"
