include: .gitlab/ci/jobs/test/common.yml

# We use the --job option to split tests into jobs of roughly the same
# duration. This is based on a file that contains timings of test results,
# generated with --record. To rebalance jobs, update this record with:
#
#   make && dune exec tezt/tests/main.exe -- --record tezt/test-results.json

.tezt_template:
  rules:
    - if:
      changes:
        paths:
          - src/**/*
          - test/**/*
      when: on_success
  variables:
    JUNIT: "tezt-junit.xml"
    # if we do not set BISECT_FILE here, it will be empty, and include the
    # full CI_PROJECT_DIR in artifacts as per the template .tezt_template.
    BISECT_FILE: "$CI_PROJECT_DIR/_coverage_output/"
    TEZT_VARIANT: ""
  artifacts:
    reports:
      junit: $JUNIT
    paths:
      - tezt.log
      - tezt-*.log
      - tezt-results-${CI_NODE_INDEX}${TEZT_VARIANT}.json
      - $BISECT_FILE
      - $JUNIT
    # The record artifacts (tezt-results-$CI_NODE_INDEX.json) should
    # be stored for as long as a given commit on master is expected to
    # be HEAD in order to support auto-balancing. At the time of
    # writing, we have approximately 6 merges per day, so 1 day should
    # more than enough. However, we set it to 3 days to keep records
    # over the weekend. The tezt artifacts (including records and
    # coverage) take up roughly 2MB / job. Total artifact storage
    # becomes N*P*T*W where N is the days of retention (3 atm), P the
    # number of pipelines per day (~200 atm), T the number of Tezt
    # jobs per pipeline (60) and W the artifact size per tezt job
    # (2MB). This makes 35GB which is less than 0.5% than our total
    # artifact usage (https://gitlab.com/tezos/tezos/-/artifacts).
    expire_in: 3 day
    when: always
  script:
    - 'echo "TESTS: ${TESTS}, JUNIT: ${JUNIT}, CI_NODE_INDEX: ${CI_NODE_INDEX}, CI_NODE_TOTAL: ${CI_NODE_TOTAL}" TEZT_PARALLEL: ${TEZT_PARALLEL} TEZT_VARIANT: ${TEZT_VARIANT}'
    # For Tezt tests, there are multiple timeouts:
    # - --global-timeout is the internal timeout of Tezt, which only works if tests
    #   are cooperative;
    # - the "timeout" command, which we set to send SIGTERM to Tezt 60s after --global-timeout
    #   in case tests are not cooperative;
    # - the "timeout" command also sends SIGKILL 60s after having sent SIGTERM in case
    #   Tezt is still stuck;
    # - the CI timeout.
    # The use of the "timeout" command is to make sure that Tezt eventually exits,
    # because if the CI timeout is reached, there are no artefacts,
    # and thus no logs to investigate.
    # See also: https://gitlab.com/gitlab-org/gitlab/-/issues/19818
    - timeout -k 60 1860 _build/default/tezt/tests/main.exe
        ${TESTS}
        --color
        --log-buffer-size 5000
        --log-file tezt.log
        --global-timeout 1800
        --on-unknown-regression-files fail
        --junit ${JUNIT}
        --from-record tezt/records
        --job ${CI_NODE_INDEX:-1}/${CI_NODE_TOTAL:-1}
        --record tezt-results-${CI_NODE_INDEX}${TEZT_VARIANT}.json
        --job-count ${TEZT_PARALLEL:-3}
        --retry 1
    - ./scripts/ci/merge_coverage.sh

.tezt_tests:
  extends:
    - .test_template
    - .image_template__runtime_e2etest_dependencies
    - .oc.template__coverage_files
    - .tezt_template
    - .rules__octez_changes
  variables:
    # Certain tests can be blacklisted by modifying the TESTS variable.
    # Do not tests with the tag 'ci_disabled' and 'flaky'.
    # See tezt/lib_tezos/tag.mli for more information.
    TESTS: "/ci_disabled /flaky"
  dependencies:
    - "oc.build_x86_64-released"
    - "oc.build_x86_64-exp-dev-extra"
    - "oc.build_kernels"
    - "oc.tezt:fetch-records"
  needs:
    - "oc.build_x86_64-released"
    - "oc.build_x86_64-exp-dev-extra"
    - "oc.build_kernels"
    - "oc.tezt:fetch-records"
  # WARNING: if you increase the number of parallel jobs, you need to
  # update test_coverage.yml with the new list of jobs.
  parallel: 60

tezt:
  extends:
    - .tezt_tests
    - .tags_template__no_gcp
  variables:
    # Exclude tests with tags 'ci_disabled', 'flaky' and `memory_{3,4}k`.
    # See tezt/lib_tezos/tag.mli for more information.
    TESTS: "/ci_disabled /flaky /memory_3k /memory_4k"
    # the -j option of tezt
    TEZT_PARALLEL: 3

# the following memory hungry tests are executed with -j 1
tezt-greedy-4k:
  extends: [.tezt_tests]
  variables:
    TESTS: "memory_4k"
    TEZT_PARALLEL: 1
    TEZT_VARIANT: "-memory_4k"
  parallel: 4

tezt-greedy-3k:
  extends: [.tezt_tests]
  variables:
    TESTS: "memory_3k"
    TEZT_PARALLEL: 1
    TEZT_VARIANT: "-memory_3k"
  parallel: 1

# these are tezt tests as above, but run using the static binaries
tezt:static-binaries:
  extends:
    # Expansion of .integration_template but without coverage.
    - .default_settings_template
    - .image_template__runtime_e2etest_dependencies
    - .tezt_template
    - .rules__octez_changes
  dependencies:
    # Fetch src/proto_*/parameters/*.json and tezt/tests/main.exe from
    # oc.build_x86_64-exp-dev-extra
    - oc.build_x86_64-exp-dev-extra
    # And fetch the static executables from build:static
    - oc.build:static-x86_64-linux-binaries
    - oc.tezt:fetch-records
  needs:
    - oc.build_x86_64-exp-dev-extra
    - oc.build:static-x86_64-linux-binaries
    - oc.tezt:fetch-records
  variables:
    TESTS: "cli"
  before_script:
    - mv octez-binaries/x86_64/octez-* .
  # Override script from .tezt_template to disable coverage reports.
  # Note that the set of tests that are run for static executables
  # is a subset, so this should not reduce apparent coverage.
  script:
    - 'echo "TESTS: ${TESTS}, JUNIT: ${JUNIT}, CI_NODE_INDEX: ${CI_NODE_INDEX}, CI_NODE_TOTAL: ${CI_NODE_TOTAL}"'
    - timeout -k 60 1860 _build/default/tezt/tests/main.exe
        ${TESTS}
        --color
        --log-buffer-size 5000
        --log-file tezt.log
        --global-timeout 1800
        --on-unknown-regression-files fail
        --junit ${JUNIT}
        --from-record tezt/records
        --job ${CI_NODE_INDEX:-1}/${CI_NODE_TOTAL:-1}
        --record tezt-results-${CI_NODE_INDEX}.json
        --job-count 3
        --retry 1

# Note: if you reactivate this test and if you keep it manual, put it in the "manual" stage.
#
#tezt:manual:migration:
#  extends:
#    - .test_template
#  before_script:
#    - export TEZOS_CLIENT_UNSAFE_DISABLE_DISCLAIMER=Y
#    - curl -s https://api.github.com/repos/Phlogi/tezos-snapshots/releases/latest | jq -r ".assets[] | select(.name) | .browser_download_url" | grep roll | xargs wget -q
#    - block_hash=$(echo mainnet.roll.* | sed -r 's/mainnet\.roll\.[0-9_-]+\.(.*)\.[0-9]+\.chain\.xz/\1/g')
#    - cat mainnet.roll.* | xz -d -v -T0 > mainnet.rolling
#    - scripts/prepare_migration_test.sh auto mainnet.rolling "$block_hash"
#  script:
#    - dune exec ./tezt/manual_tests/main.exe -- migration --color --log-buffer-size 5000 --log-file tezt-migration.log
#  artifacts:
#    when: always
#    paths:
#      - tezt-migration.log
#    expire_in: 30 days
