include: .gitlab/ci/jobs/test/common.yml

tezt:
  extends:
    - .tezt_tests
  variables:
    # Exclude tests with tags 'ci_disabled', 'flaky', 'memory_{3,4}k',
    # 'time_sensitive' and 'slow'.
    # See tezt/lib_tezos/tag.mli for more information.
    TESTS: "/ci_disabled /flaky /memory_3k /memory_4k /time_sensitive /slow"
    # the -j option of tezt
    TEZT_PARALLEL: 3

# the following memory hungry tests are executed with -j 1
tezt-memory-4k:
  extends: [.tezt_tests]
  variables:
    TESTS: "memory_4k"
    TEZT_PARALLEL: 1
    TEZT_VARIANT: "-memory_4k"
  parallel: 4

tezt-memory-3k:
  extends: [.tezt_tests]
  variables:
    TESTS: "memory_3k"
    TEZT_PARALLEL: 1
    TEZT_VARIANT: "-memory_3k"
  parallel: 1

# the following tests are executed with -j 1 to ensure that other
# tests do not affect their executions. However, these tests are not
# particularly cpu/memory-intensive hence they do not need to run on a
# particular machine contrary to performance regression tests.
tezt-time-sensitive:
  extends: [.tezt_tests]
  variables:
    TESTS: "time_sensitive"
    TEZT_PARALLEL: 1
    TEZT_VARIANT: "-time_sensitive"
  parallel: 1

# these are tezt tests as above, but run using the static binaries
tezt:static-binaries:
  extends:
    # Expansion of .integration_template but without coverage.
    - .default_settings_template
    - .image_template__runtime_e2etest_dependencies
    - .tezt_template
    - .rules__octez_changes
  dependencies:
    # Fetch src/proto_*/parameters/*.json and tezt/tests/main.exe from
    # oc.build_x86_64-exp-dev-extra
    - oc.build_x86_64-exp-dev-extra
    # And fetch the static executables from build:static
    - oc.build:static-x86_64-linux-binaries
    - oc.tezt:fetch-records
  needs:
    - oc.build_x86_64-exp-dev-extra
    - oc.build:static-x86_64-linux-binaries
    - oc.tezt:fetch-records
  variables:
    TESTS: "cli"
  before_script:
    - mv octez-binaries/x86_64/octez-* .

# Note: if you reactivate this test and if you keep it manual, put it in the "manual" stage.
#
#tezt:manual:migration:
#  extends:
#    - .test_template
#  before_script:
#    - export TEZOS_CLIENT_UNSAFE_DISABLE_DISCLAIMER=Y
#    - curl -s https://api.github.com/repos/Phlogi/tezos-snapshots/releases/latest | jq -r ".assets[] | select(.name) | .browser_download_url" | grep roll | xargs wget -q
#    - block_hash=$(echo mainnet.roll.* | sed -r 's/mainnet\.roll\.[0-9_-]+\.(.*)\.[0-9]+\.chain\.xz/\1/g')
#    - cat mainnet.roll.* | xz -d -v -T0 > mainnet.rolling
#    - scripts/prepare_migration_test.sh auto mainnet.rolling "$block_hash"
#  script:
#    - dune exec ./tezt/manual_tests/main.exe -- migration --color --log-buffer-size 5000 --log-file tezt-migration.log
#  artifacts:
#    when: always
#    paths:
#      - tezt-migration.log
#    expire_in: 30 days
