# This file was automatically generated, do not edit.
# Edit file ci/bin/main.ml instead.

oc.install_bin_ubuntu_focal:
  image: public.ecr.aws/lts/ubuntu:20.04_stable
  stage: test
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: always
  - changes:
    - docs/introduction/install*.sh
    - docs/introduction/compile*.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: on_success
  - when: manual
    allow_failure: true
  needs:
  - trigger
  dependencies: []
  script:
  - ./docs/introduction/install-bin-ubuntu.sh
oc.install_bin_ubuntu_jammy:
  image: public.ecr.aws/lts/ubuntu:22.04_stable
  stage: test
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: always
  - changes:
    - docs/introduction/install*.sh
    - docs/introduction/compile*.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: on_success
  - when: manual
    allow_failure: true
  needs:
  - trigger
  dependencies: []
  script:
  - ./docs/introduction/install-bin-ubuntu.sh
oc.install_bin_fedora_37:
  image: fedora:37
  stage: test
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: always
  - changes:
    - docs/introduction/install*.sh
    - docs/introduction/compile*.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: on_success
  - when: manual
    allow_failure: true
  needs:
  - trigger
  dependencies: []
  script:
  - ./docs/introduction/install-bin-fedora.sh
oc.install_bin_rc_ubuntu_focal:
  image: public.ecr.aws/lts/ubuntu:20.04_stable
  stage: test
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: always
  - changes:
    - docs/introduction/install*.sh
    - docs/introduction/compile*.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: on_success
  - when: manual
    allow_failure: true
  needs:
  - trigger
  dependencies: []
  script:
  - ./docs/introduction/install-bin-ubuntu.sh rc
oc.install_bin_rc_ubuntu_jammy:
  image: public.ecr.aws/lts/ubuntu:22.04_stable
  stage: test
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: always
  - changes:
    - docs/introduction/install*.sh
    - docs/introduction/compile*.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: on_success
  - when: manual
    allow_failure: true
  needs:
  - trigger
  dependencies: []
  script:
  - ./docs/introduction/install-bin-ubuntu.sh rc
oc.install_bin_rc_fedora_37:
  image: fedora:37
  stage: test
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: always
  - changes:
    - docs/introduction/install*.sh
    - docs/introduction/compile*.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: on_success
  - when: manual
    allow_failure: true
  needs:
  - trigger
  dependencies: []
  script:
  - ./docs/introduction/install-bin-fedora.sh rc
oc.install_opam_focal:
  image: ocaml/opam:ubuntu-20.04
  stage: test
  tags:
  - gcp
  needs:
  - trigger
  dependencies: []
  allow_failure: true
  script:
  - ./docs/introduction/install-opam.sh
  variables:
    OPAMJOBS: "4"
  when: manual
oc.compile_release_sources_bullseye:
  image: ocaml/opam:debian-11
  stage: test
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: always
  - changes:
    - docs/introduction/install*.sh
    - docs/introduction/compile*.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: on_success
  - when: manual
    allow_failure: true
  needs:
  - trigger
  dependencies: []
  script:
  - ./docs/introduction/compile-sources.sh tezos/tezos latest-release
oc.compile_sources_bullseye:
  image: ocaml/opam:debian-11
  stage: test
  tags:
  - gcp
  rules:
  - if: $CI_PIPELINE_SOURCE == "schedule" && $TZ_SCHEDULE_KIND == "EXTENDED_TESTS"
    when: always
  - changes:
    - docs/introduction/install*.sh
    - docs/introduction/compile*.sh
    if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: on_success
  - when: manual
    allow_failure: true
  needs:
  - trigger
  dependencies: []
  script:
  - ./docs/introduction/compile-sources.sh ${CI_MERGE_REQUEST_SOURCE_PROJECT_PATH:-tezos/tezos}
    ${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME:-master}
