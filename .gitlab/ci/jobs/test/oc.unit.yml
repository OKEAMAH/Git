.oc.unit_test_template:
  extends:
    - .test_template
    - .rules__octez_changes
  variables:
    ARCH: ""
    MAKE_TARGETS: ""
  script:
    - make $MAKE_TARGETS
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_SHA-${ARCH}"
    paths:
      - test_results
    reports:
      junit: test_results/*.xml
    expire_in: 1 day
    when: always

.oc.unit_test_template_x86_64:
  extends: .oc.unit_test_template
  variables:
    ARCH: "x86_64"

.oc.unit_test_template_x86_64_coverage:
  extends:
    - .oc.unit_test_template_x86_64
    - .oc.template__coverage_files
  script:
    - make $MAKE_TARGETS
    - ./scripts/ci/merge_coverage.sh
  artifacts:
    when: always
    paths:
      - $BISECT_FILE
      - test_results

.oc.unit_test_template_arm64:
  extends:
    - .oc.unit_test_template
    - .tags_template__build_arm64
  needs:
    - "oc.build_arm64-released"
    - "oc.build_arm64-exp-dev-extra"
  variables:
    ARCH: "arm64"
  rules:
    # These rules must be imply the rules for the [oc.build_arm64-*]
    # jobs, such the build jobs always run if the test jobs are
    # included.  Conversely, we want to run the test jobs whenever the
    # build jobs are included, so we have mainly the same rules here,
    # except that we do not make the jobs [when: manual] -- if the
    # build jobs were manual and triggered, then there is no point in
    # having the user do another manual action to also run the tests.
    - changes:
        paths:
          - src/**/*
          - .gitlab/**/*
          - .gitlab-ci.yml


oc.unit:non-proto-x86_64:
  extends:
  - .oc.unit_test_template_x86_64_coverage
  # The [lib_benchmark] unit tests require Python
  - .image_template__runtime_build_test_dependencies
  variables:
    MAKE_TARGETS: test-nonproto-unit

oc.unit:other-x86_64:
  extends:
  - .oc.unit_test_template_x86_64_coverage
  variables:
    MAKE_TARGETS: test-other-unit

oc.unit:proto-x86_64:
  extends:
  - .oc.unit_test_template_x86_64_coverage
  variables:
    MAKE_TARGETS: test-proto-unit

oc.unit:non-proto-arm64:
  extends:
    - .oc.unit_test_template_arm64
    # The [lib_benchmark] unit tests require Python
    - .image_template__runtime_build_test_dependencies
  variables:
    MAKE_TARGETS: test-nonproto-unit test-webassembly
    DISTRIBUTE_TESTS_TO_PARALLELS: "true"
  parallel: 2

oc.unit:webassembly-x86_64:
  extends:
  - .default_settings_template
  # The wasm tests are written in Python
  - .image_template__runtime_build_test_dependencies
  - .rules__octez_changes
  needs:
    - "oc.build_x86_64-released"
    - "oc.build_x86_64-exp-dev-extra"
  stage: test
  # TODO: https://gitlab.com/tezos/tezos/-/issues/4663
  # This test takes around 2 to 4min to complete, but it sometimes
  # hangs. We use a timeout to retry the test in this case. The
  # underlying issue should be fixed eventually, turning this timeout
  # unnecessary.
  timeout: 20 min
  before_script:
    - . ./scripts/version.sh
    - eval $(opam env)
  script:
    - make test-webassembly

oc.unit:js_components:
  extends:
    - .default_settings_template
    - .image_template__runtime_build_test_dependencies
    - .rules__octez_changes
  stage: test
  needs:
    - "oc.build_x86_64-released"
    - "oc.build_x86_64-exp-dev-extra"
  # This is known to have been flaky
  retry: 2
  variables:
    # See `.gitlab-ci.yml` for details on `RUNTEZTALIAS`
    RUNTEZTALIAS: "true"
  # Note: this overrides the `before_script` inherited from
  # `.test_template` to add `take_ownership.sh`.
  before_script:
    - ./scripts/ci/take_ownership.sh
    - . ./scripts/version.sh
    - eval $(opam env)
    - . ./scripts/install_build_deps.js.sh
  script:
    - make test-js

oc.unit:protocol_compiles:
  extends:
    - .default_settings_template
    - .image_template__runtime_build_dependencies
    - .rules__octez_changes
  stage: test
  needs:
    - "oc.build_x86_64-released"
    - "oc.build_x86_64-exp-dev-extra"
  before_script:
    - . ./scripts/version.sh
    - eval $(opam env)
  script:
    - dune build @runtest_compile_protocol
