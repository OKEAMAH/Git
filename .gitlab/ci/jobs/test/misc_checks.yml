oc.misc_checks:
  extends:
    - .default_settings_template
    - .image_template__runtime_build_test_dependencies
    - .rules__octez_changes
  stage: "test"
  needs: [trigger]
  before_script:
    - . ./scripts/version.sh
    # Load the environment poetry previously created in the docker image.
    # Give access to the Python dependencies/executables
    - . $HOME/.venv/bin/activate
  script:
    - ./scripts/ci/take_ownership.sh
    - ./scripts/ci/lint_misc_check.sh
    - scripts/check_wasm_pvm_regressions.sh check

kaitai_checks: # check that ksy files are still up-to-date with octez
  extends:
    - .test_template
  rules:
    - if:
      changes:
        paths:
          - src/**/*
          - contrib/*kaitai*/**/*
          - .gitlab/**/*
          - .gitlab-ci.yml
      when: on_success
  # These tests are not flaky at all so we overwrite the retry value
  retry: 0
  needs: [trigger]
  needs:
    - "oc.build_x86_64-released"
  before_script:
    - . ./scripts/version.sh
  script:
    - make -C ${CI_PROJECT_DIR} check-kaitai-struct-files

oc.check_lift_limits_patch:
  extends:
    - .test_template
  # These tests are not flaky at all so we overwrite the retry value
  retry: 0
  needs: [trigger]
  rules:
    - changes:
        - src/bin_tps_evaluation/lift_limits.patch
        - src/proto_alpha/lib_protocol/main.ml
        - .gitlab/**/*
        - .gitlab-ci.yml
      when: on_success
  script:
    # Check that the patch only modifies the
    # src/proto_alpha/lib_protocol. If not, the rules above have to be
    # updated.
    - '[ $(git apply --numstat src/bin_tps_evaluation/lift_limits.patch | cut -f3) = "src/proto_alpha/lib_protocol/main.ml" ]'
    - git apply src/bin_tps_evaluation/lift_limits.patch
    - dune build @src/proto_alpha/lib_protocol/check
